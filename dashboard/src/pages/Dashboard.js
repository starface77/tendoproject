import React, { useState, useEffect } from 'react';
import { Row, Col, Card, Statistic, message, Spin } from 'antd';
import {
  ShoppingCartOutlined,
  DollarOutlined,
  UserOutlined,
  AppstoreOutlined
} from '@ant-design/icons';
import { dashboardApi, productsApi, ordersApi, usersApi, sellerApplicationsApi } from '../services/api';

const Dashboard = () => {
  const [stats, setStats] = useState({
    orders: 0,
    revenue: 0,
    users: 0,
    products: 0,
    sellerApplications: 0,
    pendingApplications: 0
  });
  // const [recentProducts, setRecentProducts] = useState([]);
  // const [recentApplications, setRecentApplications] = useState([]);
  const [loading, setLoading] = useState(true);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    loadDashboardData();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –¥–∞—à–±–æ—Ä–¥–∞
  const loadDashboardData = async () => {
    try {
      setLoading(true);
      
      // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –≥–æ—Ç–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å –±—ç–∫–µ–Ω–¥–∞
      try {
        const statsResponse = await dashboardApi.getStats();
        setStats(statsResponse);
      } catch (error) {
        // –ï—Å–ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏
        console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏');
        await loadIndividualStats();
      }

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç–æ–≤–∞—Ä—ã
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –±–ª–æ–∫–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤/–∑–∞—è–≤–æ–∫ –Ω–∞ —ç—Ç–æ–º —ç—Ç–∞–ø–µ

      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞—è–≤–æ–∫ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤
      try {
        const applicationsStatsResponse = await sellerApplicationsApi.getStats();
        
        const totalApplications = applicationsStatsResponse.totalStats?.reduce((sum, item) => sum + item.count, 0) || 0;
        const pendingApplications = applicationsStatsResponse.pendingCount || 0;
        
        setStats(prevStats => ({
          ...prevStats,
          sellerApplications: totalApplications,
          pendingApplications: pendingApplications
        }));
        
        // –ü—Ä–æ–ø—É—â–µ–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤:', error);
      }

    } catch (error) {
      message.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–∞—à–±–æ—Ä–¥–∞: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏
  const loadIndividualStats = async () => {
    try {
      const [productsRes] = await Promise.all([
        productsApi.getAll().catch(() => ({ products: [] })),
      ]);

      // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–∫–∞–∑—ã –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã)
      let ordersCount = 0;
      let usersCount = 0;
      let totalRevenue = 0;

      try {
        const ordersRes = await ordersApi.getAll();
        ordersCount = ordersRes.orders?.length || 0;
        totalRevenue = ordersRes.orders?.reduce((sum, order) => sum + (order.total || 0), 0) || 0;
      } catch (error) {
        console.log('–ó–∞–∫–∞–∑—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
      }

      try {
        const usersRes = await usersApi.getAll();
        usersCount = usersRes.users?.length || 0;
      } catch (error) {
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
      }

      setStats({
        orders: ordersCount,
        revenue: totalRevenue,
        users: usersCount,
        products: productsRes.products?.length || 0
      });

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    }
  };

  // –ö–æ–ª–æ–Ω–∫–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
  // –£–±—Ä–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ —Å –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏

  if (loading) {
    return (
      <div style={{ textAlign: 'center', padding: '50px' }}>
        <Spin size="large" />
        <p style={{ marginTop: '16px' }}>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–∞—à–±–æ—Ä–¥–∞...</p>
      </div>
    );
  }

  return (
    <div>
      <h1 style={{ marginBottom: '24px' }}>üìä –î–∞—à–±–æ—Ä–¥</h1>
      
      {/* –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <Row gutter={16} style={{ marginBottom: '24px' }}>
        <Col span={6}>
          <Card>
            <Statistic
              title="–ó–∞–∫–∞–∑—ã"
              value={stats.orders}
              prefix={<ShoppingCartOutlined />}
              valueStyle={{ color: '#3f8600' }}
            />
          </Card>
        </Col>
        <Col span={6}>
          <Card>
            <Statistic
              title="–í—ã—Ä—É—á–∫–∞"
              value={stats.revenue}
              prefix={<DollarOutlined />}
              suffix="—Å—É–º"
              valueStyle={{ color: '#cf1322' }}
            />
          </Card>
        </Col>
        <Col span={6}>
          <Card>
            <Statistic
              title="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"
              value={stats.users}
              prefix={<UserOutlined />}
              valueStyle={{ color: '#1890ff' }}
            />
          </Card>
        </Col>
        <Col span={6}>
          <Card>
            <Statistic
              title="–¢–æ–≤–∞—Ä—ã"
              value={stats.products}
              prefix={<AppstoreOutlined />}
              valueStyle={{ color: '#722ed1' }}
            />
          </Card>
        </Col>
      </Row>

      <Card style={{ marginTop: '24px' }}>
        <h3>üìà –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å Tendo Market!</h3>
        <p>–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –≤—Å–µ–º–∏ –∞—Å–ø–µ–∫—Ç–∞–º–∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞.</p>
        <p>üì± –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é —Å–ª–µ–≤–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º.</p>
      </Card>
    </div>
  );
};

export default Dashboard;