import React, { useState, useEffect } from 'react';
import {
  Table,
  Card,
  Tag,
  Button,
  Space,
  Modal,
  Form,
  Input,
  message,
  Select,
  Descriptions,
  Tooltip,
  Row,
  Col,
  Statistic,
  Typography,
  Divider
} from 'antd';
import {
  CheckOutlined,
  CloseOutlined,
  EyeOutlined,
  FileTextOutlined,
  ShopOutlined,
  CalendarOutlined,
  UserOutlined,
  PhoneOutlined,
  MailOutlined,
  GlobalOutlined,
  TagsOutlined,
  DollarOutlined,
  TrophyOutlined
} from '@ant-design/icons';
import { sellerApplicationsApi } from '../services/api';

const { Title, Text } = Typography;
const { TextArea } = Input;
const { Option } = Select;

function SellerApplications() {
  const [applications, setApplications] = useState([]);
  const [loading, setLoading] = useState(false);
  const [stats, setStats] = useState({});
  const [selectedApplication, setSelectedApplication] = useState(null);
  const [detailsVisible, setDetailsVisible] = useState(false);
  const [actionVisible, setActionVisible] = useState(false);
  const [actionType, setActionType] = useState(null);
  const [form] = Form.useForm();
  
  // –§–∏–ª—å—Ç—Ä—ã
  const [filters, setFilters] = useState({
    status: 'all',
    page: 1,
    limit: 10
  });

  useEffect(() => {
    console.log('üöÄ useEffect –∑–∞–ø—É—â–µ–Ω, filters:', filters);
    fetchApplications();
    fetchStats();
  // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [filters]);

  // –û—Ç–ª–∞–¥–æ—á–Ω—ã–π useEffect –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏—è
  useEffect(() => {
    console.log('üîÑ –°–æ—Å—Ç–æ—è–Ω–∏–µ applications –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:', applications.length, applications);
  }, [applications]);

  const fetchApplications = async () => {
    try {
      setLoading(true);
      const params = { ...filters };
      if (params.status === 'all') delete params.status;
      
      console.log('üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞—è–≤–∫–∏ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', params);
      console.log('üîç URL –∑–∞–ø—Ä–æ—Å–∞:', `/admin/seller-applications?${new URLSearchParams(params).toString()}`);
      
      const response = await sellerApplicationsApi.getAll(params);
      console.log('üìã –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API:', response);
      console.log('üìã response (—É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏–Ω—Ç–µ—Ä—Å–µ–ø—Ç–æ—Ä–æ–º):', response);
      console.log('üìã response.data:', response.data);
      console.log('üìã response.applications:', response.applications);
      
      // –ò–Ω—Ç–µ—Ä—Å–µ–ø—Ç–æ—Ä —É–∂–µ –≤–µ—Ä–Ω—É–ª response.data, –ø–æ—ç—Ç–æ–º—É response —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ
      const applicationsData = response.data || response.applications || [];
      console.log('üìã –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:', applicationsData);
      console.log('üìã –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫:', applicationsData.length);
      console.log('üìã –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö:', typeof applicationsData, Array.isArray(applicationsData));
      
      setApplications(applicationsData);
      console.log('‚úÖ –ó–∞—è–≤–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫:', error);
      console.error('‚ùå –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response?.data || error.message);
      message.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  const fetchStats = async () => {
    try {
      const response = await sellerApplicationsApi.getStats();
      console.log('üìä –ü–æ–ª—É—á–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', response);
      // –ò–Ω—Ç–µ—Ä—Å–µ–ø—Ç–æ—Ä —É–∂–µ –≤–µ—Ä–Ω—É–ª response.data, –ø–æ—ç—Ç–æ–º—É response —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ
      const statsData = response.data || response || {};
      console.log('üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', statsData);
      setStats(statsData);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    }
  };

  const handleAction = async (values) => {
    try {
      const { comments, sellerData } = values;
      // no-op

      console.log('üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ:', actionType, '–¥–ª—è –∑–∞—è–≤–∫–∏:', selectedApplication._id);

      if (actionType === 'approve') {
        await sellerApplicationsApi.approve(selectedApplication._id, {
          comments,
          sellerData
        });
        message.success('–ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!');
      } else if (actionType === 'reject') {
        await sellerApplicationsApi.reject(selectedApplication._id, {
          comments
        });
        message.success('–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞');
      } else if (actionType === 'request-docs') {
        await sellerApplicationsApi.requestDocuments(selectedApplication._id, {
          comments
        });
        message.success('–ó–∞–ø—Ä–æ—à–µ–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã');
      }

      setActionVisible(false);
      form.resetFields();
      await fetchApplications();
      await fetchStats();
    } catch (error) {
      message.error('–û—à–∏–±–∫–∞: ' + error.message);
    }
  };

  const getStatusColor = (status) => {
    const colors = {
      pending: 'orange',
      under_review: 'blue',
      approved: 'green',
      rejected: 'red',
      requires_documents: 'purple'
    };
    return colors[status] || 'default';
  };

  const getStatusText = (status) => {
    const texts = {
      pending: '–û–∂–∏–¥–∞–µ—Ç',
      under_review: '–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏',
      approved: '–û–¥–æ–±—Ä–µ–Ω–∞',
      rejected: '–û—Ç–∫–ª–æ–Ω–µ–Ω–∞',
      requires_documents: '–ù—É–∂–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç—ã'
    };
    return texts[status] || status;
  };

  const getBusinessTypeText = (type) => {
    const types = {
      individual: '–§–∏–∑. –ª–∏—Ü–æ',
      ip: '–ò–ü',
      llc: '–û–û–û',
      ooo: '–û–ê–û',
      other: '–î—Ä—É–≥–æ–µ'
    };
    return types[type] || type;
  };

  const columns = [
    {
      title: 'ID',
      dataIndex: '_id',
      key: '_id',
      width: 80,
      render: (id) => `#${id?.slice(-6) || 'N/A'}`
    },
    {
      title: '–ö–æ–º–ø–∞–Ω–∏—è',
      key: 'businessName',
      render: (record) => (
        <div>
          <div style={{ fontWeight: 'bold' }}>
            {record.businessInfo?.companyName || record.businessName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
          </div>
          <div style={{ fontSize: '12px', color: '#666' }}>
            {record.businessInfo?.phone || record.phone || '–¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω'}
          </div>
        </div>
      )
    },
    {
      title: '–ö–æ–Ω—Ç–∞–∫—Ç',
      key: 'contactName',
      render: (record) => (
        <div>
          <div>{record.contactInfo?.contactPerson || record.contactName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
          <div style={{ fontSize: '12px', color: '#666' }}>
            {record.contactInfo?.email || record.email || 'Email –Ω–µ —É–∫–∞–∑–∞–Ω'}
          </div>
        </div>
      )
    },
    {
      title: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏',
      key: 'categories',
      render: (record) => {
        const categories = record.productCategories || record.categories || [];
        return (
          <div>
            {categories?.slice(0, 2).map(cat => (
              <Tag key={cat} size="small">{cat}</Tag>
            ))}
            {categories?.length > 2 && (
              <Tag size="small">+{categories.length - 2}</Tag>
            )}
          </div>
        );
      }
    },
    {
      title: '–°—Ç–∞—Ç—É—Å',
      dataIndex: 'status',
      key: 'status',
      render: (status) => (
        <Tag color={getStatusColor(status)}>
          {getStatusText(status)}
        </Tag>
      )
    },
    {
      title: '–î–∞—Ç–∞ –ø–æ–¥–∞—á–∏',
      dataIndex: 'createdAt',
      key: 'createdAt',
      render: (date) => new Date(date).toLocaleDateString('ru-RU')
    },
    {
      title: '–î–µ–π—Å—Ç–≤–∏—è',
      key: 'actions',
      render: (_, record) => (
        <Space>
          <Tooltip title="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª–∏">
            <Button 
              icon={<EyeOutlined />} 
              size="small"
              onClick={() => {
                setSelectedApplication(record);
                setDetailsVisible(true);
              }}
            />
          </Tooltip>
          
          {record.status === 'pending' && (
            <>
              <Tooltip title="–û–¥–æ–±—Ä–∏—Ç—å">
                <Button 
                  icon={<CheckOutlined />} 
                  size="small"
                  type="primary"
                  onClick={() => {
                    console.log('‚úÖ –í—ã–±—Ä–∞–Ω–∞ –∑–∞—è–≤–∫–∞ –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è:', record._id, record);
                    setSelectedApplication(record);
                    setActionType('approve');
                    setActionVisible(true);
                  }}
                />
              </Tooltip>
              
              <Tooltip title="–û—Ç–∫–ª–æ–Ω–∏—Ç—å">
                <Button 
                  icon={<CloseOutlined />} 
                  size="small"
                  danger
                  onClick={() => {
                    console.log('‚ùå –í—ã–±—Ä–∞–Ω–∞ –∑–∞—è–≤–∫–∞ –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è:', record._id, record);
                    setSelectedApplication(record);
                    setActionType('reject');
                    setActionVisible(true);
                  }}
                />
              </Tooltip>
              
              <Tooltip title="–ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã">
                <Button 
                  icon={<FileTextOutlined />} 
                  size="small"
                  onClick={() => {
                    console.log('üìÑ –í—ã–±—Ä–∞–Ω–∞ –∑–∞—è–≤–∫–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:', record._id, record);
                    setSelectedApplication(record);
                    setActionType('request-docs');
                    setActionVisible(true);
                  }}
                />
              </Tooltip>
            </>
          )}
        </Space>
      )
    }
  ];

  return (
    <div>
      <Title level={2}>
        <ShopOutlined /> –ó–∞—è–≤–∫–∏ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤
      </Title>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <Row gutter={16} style={{ marginBottom: 24 }}>
        <Col span={6}>
          <Card>
            <Statistic
              title="–í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫"
              value={stats.total || 0}
              prefix={<FileTextOutlined />}
            />
          </Card>
        </Col>
        <Col span={6}>
          <Card>
            <Statistic
              title="–û–∂–∏–¥–∞—é—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è"
              value={stats.byStatus?.pending || 0}
              valueStyle={{ color: '#fa8c16' }}
              prefix={<CalendarOutlined />}
            />
          </Card>
        </Col>
        <Col span={6}>
          <Card>
            <Statistic
              title="–û–¥–æ–±—Ä–µ–Ω–æ"
              value={stats.byStatus?.approved || 0}
              valueStyle={{ color: '#52c41a' }}
              prefix={<CheckOutlined />}
            />
          </Card>
        </Col>
        <Col span={6}>
          <Card>
            <Statistic
              title="–û—Ç–∫–ª–æ–Ω–µ–Ω–æ"
              value={stats.byStatus?.rejected || 0}
              valueStyle={{ color: '#ff4d4f' }}
              prefix={<CloseOutlined />}
            />
          </Card>
        </Col>
      </Row>

      {/* –§–∏–ª—å—Ç—Ä—ã */}
      <Card style={{ marginBottom: 16 }}>
        <Row gutter={16} align="middle">
          <Col>
            <Text strong>–§–∏–ª—å—Ç—Ä—ã:</Text>
          </Col>
          <Col>
            <Select
              value={filters.status}
              style={{ width: 200 }}
              onChange={(value) => setFilters({ ...filters, status: value, page: 1 })}
            >
              <Option value="all">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</Option>
              <Option value="pending">–û–∂–∏–¥–∞—é—Ç</Option>
              <Option value="under_review">–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏</Option>
              <Option value="approved">–û–¥–æ–±—Ä–µ–Ω—ã</Option>
              <Option value="rejected">–û—Ç–∫–ª–æ–Ω–µ–Ω—ã</Option>
              <Option value="requires_documents">–ù—É–∂–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç—ã</Option>
            </Select>
          </Col>
          <Col>
            <Button onClick={() => setFilters({ status: 'all', page: 1, limit: 10 })}>
              –°–±—Ä–æ—Å–∏—Ç—å
            </Button>
          </Col>
        </Row>
      </Card>

      {/* –¢–∞–±–ª–∏—Ü–∞ –∑–∞—è–≤–æ–∫ */}
      <Card>
        {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        {process.env.NODE_ENV === 'development' && (
          <div style={{ marginBottom: 16, padding: 8, background: '#f0f0f0', fontSize: '12px' }}>
            <strong>–û—Ç–ª–∞–¥–∫–∞:</strong> –ó–∞—è–≤–æ–∫ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏: {applications.length} | 
            –ó–∞–≥—Ä—É–∑–∫–∞: {loading ? '–î–∞' : '–ù–µ—Ç'} | 
            –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {JSON.stringify(stats)}
          </div>
        )}
        <Table
          columns={columns}
          dataSource={applications}
          loading={loading}
          rowKey="_id"
          pagination={{
            current: filters.page,
            pageSize: filters.limit,
            total: applications.length > 0 ? 11 : 0, // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            onChange: (page, pageSize) => {
              setFilters({ ...filters, page, limit: pageSize });
            }
          }}
        />
      </Card>

      {/* –ú–æ–¥–∞–ª–∫–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞—è–≤–∫–∏ */}
      <Modal
        title={
          <Space>
            <EyeOutlined />
            –î–µ—Ç–∞–ª–∏ –∑–∞—è–≤–∫–∏ #{selectedApplication?.id}
          </Space>
        }
        open={detailsVisible}
        onCancel={() => setDetailsVisible(false)}
        footer={null}
        width={800}
      >
        {selectedApplication && (
          <div>
            <Descriptions bordered column={2}>
              <Descriptions.Item label="–°—Ç–∞—Ç—É—Å" span={2}>
                <Tag color={getStatusColor(selectedApplication.status)}>
                  {getStatusText(selectedApplication.status)}
                </Tag>
              </Descriptions.Item>
              
              <Descriptions.Item label="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏">
                {selectedApplication.businessName}
              </Descriptions.Item>
              <Descriptions.Item label="–¢–∏–ø –±–∏–∑–Ω–µ—Å–∞">
                {getBusinessTypeText(selectedApplication.businessType)}
              </Descriptions.Item>
              
              <Descriptions.Item label="–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ">
                <UserOutlined /> {selectedApplication.contactName}
              </Descriptions.Item>
              <Descriptions.Item label="Email">
                <MailOutlined /> {selectedApplication.email}
              </Descriptions.Item>
              
              <Descriptions.Item label="–¢–µ–ª–µ—Ñ–æ–Ω">
                <PhoneOutlined /> {selectedApplication.phone}
              </Descriptions.Item>
              <Descriptions.Item label="–í–µ–±-—Å–∞–π—Ç">
                {selectedApplication.website ? (
                  <><GlobalOutlined /> {selectedApplication.website}</>
                ) : '–ù–µ —É–∫–∞–∑–∞–Ω'}
              </Descriptions.Item>
              
              <Descriptions.Item label="–ê–¥—Ä–µ—Å" span={2}>
                {selectedApplication.address}
              </Descriptions.Item>
              
              <Descriptions.Item label="–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤" span={2}>
                {selectedApplication.categories?.map(cat => (
                  <Tag key={cat} icon={<TagsOutlined />}>{cat}</Tag>
                ))}
              </Descriptions.Item>
              
              <Descriptions.Item label="–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤" span={2}>
                {selectedApplication.productTypes}
              </Descriptions.Item>
              
              <Descriptions.Item label="–û–±—ä–µ–º –ø—Ä–æ–¥–∞–∂">
                <DollarOutlined /> {selectedApplication.monthlyVolume}
              </Descriptions.Item>
              <Descriptions.Item label="–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã">
                <TrophyOutlined /> {selectedApplication.experience}
              </Descriptions.Item>
              
              <Descriptions.Item label="–î–∞—Ç–∞ –ø–æ–¥–∞—á–∏">
                <CalendarOutlined /> {new Date(selectedApplication.createdAt).toLocaleString('ru-RU')}
              </Descriptions.Item>
              <Descriptions.Item label="–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ">
                <CalendarOutlined /> {new Date(selectedApplication.updatedAt).toLocaleString('ru-RU')}
              </Descriptions.Item>
            </Descriptions>

            {selectedApplication.moderatorComments && (
              <>
                <Divider />
                <Title level={5}>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:</Title>
                <Text type="secondary">{selectedApplication.moderatorComments}</Text>
              </>
            )}
          </div>
        )}
      </Modal>

      {/* –ú–æ–¥–∞–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π */}
      <Modal
        title={
          actionType === 'approve' ? '–û–¥–æ–±—Ä–∏—Ç—å –∑–∞—è–≤–∫—É' :
          actionType === 'reject' ? '–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É' :
          '–ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã'
        }
        open={actionVisible}
        onCancel={() => {
          setActionVisible(false);
          form.resetFields();
        }}
        onOk={() => form.submit()}
        confirmLoading={loading}
      >
        <Form
          form={form}
          layout="vertical"
          onFinish={handleAction}
        >
          {actionType === 'approve' && (
            <>
              <Form.Item
                name="displayName"
                label="–ù–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞"
                rules={[{ required: true, message: '–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞' }]}
              >
                <Input placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: Tendo Textiles Store" />
              </Form.Item>
              
              <Form.Item
                name="description"
                label="–û–ø–∏—Å–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞"
              >
                <TextArea 
                  rows={3} 
                  placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞..."
                />
              </Form.Item>
            </>
          )}
          
          <Form.Item
            name="comments"
            label="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
            rules={actionType === 'reject' ? [{ required: true, message: '–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è' }] : []}
          >
            <TextArea 
              rows={4} 
              placeholder={
                actionType === 'approve' ? '–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è...' :
                actionType === 'reject' ? '–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è...' :
                '–£–∫–∞–∂–∏—Ç–µ –∫–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã —Ç—Ä–µ–±—É—é—Ç—Å—è...'
              }
            />
          </Form.Item>
        </Form>
      </Modal>
    </div>
  );
}

export default SellerApplications;



