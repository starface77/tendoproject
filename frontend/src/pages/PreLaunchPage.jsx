import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import axios from 'axios';

const PreLaunchPage = () => {
  const navigate = useNavigate();
  const [timeLeft, setTimeLeft] = useState({ days: 0, hours: 0, minutes: 0, seconds: 0 });
  const [isLoading, setIsLoading] = useState(true);
  const [launchData, setLaunchData] = useState(null);

  useEffect(() => {
    const loadLaunchData = async () => {
      try {
        const response = await axios.get('/api/v1/launch/status');
        if (response.data.success) {
          const data = response.data.data;
          setLaunchData(data);

          // –ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω, —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          if (data.isLaunched) {
            navigate('/main', { replace: true });
            return;
          }

          // –ï—Å–ª–∏ pre-launch –æ—Ç–∫–ª—é—á–µ–Ω, —Ç–æ–∂–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º
          if (!data.preLaunchEnabled) {
            navigate('/main', { replace: true });
            return;
          }

          // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
          startTimer(new Date(data.launchDate));
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—Å–∫–∞:', error);
        // –ü—Ä–∏ –æ—à–∏–±–∫–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–ø–∞—Å–Ω—É—é –¥–∞—Ç—É
        startTimer(new Date('2025-09-15T00:00:00Z'));
      }
    };

    const startTimer = (launchDate) => {
      const updateTimer = () => {
        const now = new Date().getTime();
        const distance = launchDate.getTime() - now;

        if (distance <= 0) {
          // –í—Ä–µ–º—è –≤—ã—à–ª–æ - —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ /main
          navigate('/main', { replace: true });
          return;
        }

        const days = Math.floor(distance / (1000 * 60 * 60 * 24));
        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((distance % (1000 * 60)) / 1000);

        setTimeLeft({ days, hours, minutes, seconds });
      };

      // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
      updateTimer();

      // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
      const interval = setInterval(updateTimer, 1000);

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
      return () => clearInterval(interval);
    };

    loadLaunchData();
    setIsLoading(false);

    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–ø—É—Å–∫–∞ (–∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É)
    const statusInterval = setInterval(loadLaunchData, 60000);

    return () => {
      clearInterval(statusInterval);
    };
  }, [navigate]);

  if (isLoading) {
    return (
      <div className="min-h-screen bg-white flex items-center justify-center">
        <div className="text-gray-900 text-center">
          <div className="w-12 h-12 border-4 border-gray-300 border-t-gray-900 rounded-full animate-spin mx-auto mb-4"></div>
          <p className="text-lg">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-white flex items-center justify-center p-4">
      <div className="max-w-2xl w-full text-center">
        {/* –õ–æ–≥–æ—Ç–∏–ø/–ò–∫–æ–Ω–∫–∞ */}
        <div className="mb-8">
          <div className="text-6xl mb-4">üöÄ</div>
        </div>

        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <h1 className="text-3xl md:text-4xl font-semibold text-gray-900 mb-12">
          –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ —á–µ—Ä–µ–∑:
        </h1>

        {/* –¢–∞–π–º–µ—Ä */}
        <div className="flex justify-center gap-6 md:gap-12 mb-12">
          {/* –î–Ω–∏ */}
          <div className="text-center">
            <div className="text-4xl md:text-5xl font-bold text-gray-900 mb-2">
              {timeLeft.days}
            </div>
            <div className="text-sm text-gray-600 uppercase tracking-wide">
              –¥–Ω–µ–π
            </div>
          </div>

          {/* –ß–∞—Å—ã */}
          <div className="text-center">
            <div className="text-4xl md:text-5xl font-bold text-gray-900 mb-2">
              {timeLeft.hours}
            </div>
            <div className="text-sm text-gray-600 uppercase tracking-wide">
              —á–∞—Å–æ–≤
            </div>
          </div>

          {/* –ú–∏–Ω—É—Ç—ã */}
          <div className="text-center">
            <div className="text-4xl md:text-5xl font-bold text-gray-900 mb-2">
              {timeLeft.minutes}
            </div>
            <div className="text-sm text-gray-600 uppercase tracking-wide">
              –º–∏–Ω—É—Ç
            </div>
          </div>

          {/* –°–µ–∫—É–Ω–¥—ã */}
          <div className="text-center">
            <div className="text-4xl md:text-5xl font-bold text-gray-900 mb-2">
              {timeLeft.seconds}
            </div>
            <div className="text-sm text-gray-600 uppercase tracking-wide">
              —Å–µ–∫—É–Ω–¥
            </div>
          </div>
        </div>

        {/* –°–æ–æ–±—â–µ–Ω–∏–µ */}
        <div className="max-w-lg mx-auto">
          <p className="text-lg text-gray-700 leading-relaxed">
            –ú—ã –≥–æ—Ç–æ–≤–∏–º —á—Ç–æ-—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–µ –¥–ª—è –≤–∞—Å. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!
          </p>
        </div>
      </div>
    </div>
  );
};

export default PreLaunchPage;