const { MongoClient } = require('mongodb');
const bcrypt = require('bcryptjs');

async function createUserDirect() {
  const client = new MongoClient('mongodb://localhost:27017');

  try {
    await client.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    const db = client.db('chexoluz');
    const users = db.collection('users');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∞–¥–º–∏–Ω–∞
    const existingAdmin = await users.findOne({ email: 'admin@market.com' });

    if (!existingAdmin) {
      console.log('üëë –°–æ–∑–¥–∞—é –∞–¥–º–∏–Ω–∞...');

      const hashedPassword = await bcrypt.hash('admin123456', 12);

      const admin = {
        email: 'admin@market.com',
        password: hashedPassword,
        firstName: 'Admin',
        lastName: 'Market',
        phone: '+998901234567',
        role: 'admin',
        isActive: true,
        isEmailVerified: true,
        createdAt: new Date(),
        updatedAt: new Date()
      };

      await users.insertOne(admin);
      console.log('‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω');
    } else {
      console.log('‚úÖ –ê–¥–º–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }

    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    const categories = db.collection('categories');
    const existingCategory = await categories.findOne({ slug: 'electronics' });

    if (!existingCategory) {
      console.log('üìÇ –°–æ–∑–¥–∞—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é...');

      const category = {
        name: {
          ru: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
          uz: 'Elektronika',
          en: 'Electronics'
        },
        slug: 'electronics',
        description: {
          ru: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –≥–∞–¥–∂–µ—Ç—ã',
          uz: 'Elektronika va gadjetlar',
          en: 'Electronics and gadgets'
        },
        icon: 'üì±',
        isActive: true,
        isVisible: true,
        level: 0,
        path: '/electronics',
        createdAt: new Date(),
        updatedAt: new Date()
      };

      await categories.insertOne(category);
      console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞');
    } else {
      console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }

    console.log('üéØ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:');
    console.log('üìß Email: admin@market.com');
    console.log('üîë Password: admin123456');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await client.close();
    console.log('‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç MongoDB');
  }
}

createUserDirect();




