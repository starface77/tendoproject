const mongoose = require('mongoose');
const Category = require('./models/Category');

async function checkCategories() {
  try {
    await mongoose.connect('mongodb://localhost:27017/tendo-market');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    const categories = await Category.find({}).sort({ createdAt: -1 });
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${categories.length}`);

    if (categories.length === 0) {
      console.log('‚ö†Ô∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–æ–∑–¥–∞—é –±–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...');

      // –ù–∞–π–¥–µ–º –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞ –¥–ª—è createdBy
      const User = require('./models/User');
      const admin = await User.findOne({ role: 'admin' });
      if (!admin) {
        console.log('‚ùå –ê–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω–∞ —Å–Ω–∞—á–∞–ª–∞.');
        return;
      }

      const defaultCategories = [
        {
          name: { ru: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', uz: 'Elektronika', en: 'Electronics' },
          slug: 'electronics',
          description: { ru: '–¢–µ–ª–µ—Ñ–æ–Ω—ã, –∫–æ–º–ø—å—é—Ç–µ—Ä—ã, –≥–∞–¥–∂–µ—Ç—ã', uz: 'Telefonlar, kompyuterlar, gadjetlar', en: 'Phones, computers, gadgets' },
          icon: 'üì±',
          createdBy: admin._id
        },
        {
          name: { ru: '–û–¥–µ–∂–¥–∞', uz: 'Kiyim', en: 'Clothing' },
          slug: 'clothing',
          description: { ru: '–ú—É–∂—Å–∫–∞—è, –∂–µ–Ω—Å–∫–∞—è –æ–¥–µ–∂–¥–∞', uz: 'Erkaklar va ayollar kiyimi', en: 'Men and women clothing' },
          icon: 'üëï',
          createdBy: admin._id
        },
        {
          name: { ru: '–û–±—É–≤—å', uz: 'Oyoq kiyim', en: 'Shoes' },
          slug: 'shoes',
          description: { ru: '–ö—Ä–æ—Å—Å–æ–≤–∫–∏, –±–æ—Ç–∏–Ω–∫–∏, —Ç—É—Ñ–ª–∏', uz: 'Krossovkalar, etiklar, tuflar', en: 'Sneakers, boots, shoes' },
          icon: 'üëü',
          createdBy: admin._id
        },
        {
          name: { ru: '–î–æ–º –∏ —Å–∞–¥', uz: 'Uy va bog\'', en: 'Home and Garden' },
          slug: 'home-garden',
          description: { ru: '–ú–µ–±–µ–ª—å, –¥–µ–∫–æ—Ä, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', uz: 'Mebel, dekor, asboblar', en: 'Furniture, decor, tools' },
          icon: 'üè†',
          createdBy: admin._id
        },
        {
          name: { ru: '–°–ø–æ—Ä—Ç –∏ –æ—Ç–¥—ã—Ö', uz: 'Sport va dam olish', en: 'Sports and Recreation' },
          slug: 'sports',
          description: { ru: '–°–ø–æ—Ä—Ç—Ç–æ–≤–∞—Ä—ã, —Ç—É—Ä–∏–∑–º', uz: 'Sport buyumlari, turizm', en: 'Sports goods, tourism' },
          icon: '‚öΩ',
          createdBy: admin._id
        },
        {
          name: { ru: '–ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ', uz: 'Go\'zallik va salomatlik', en: 'Beauty and Health' },
          slug: 'beauty',
          description: { ru: '–ö–æ—Å–º–µ—Ç–∏–∫–∞, —É—Ö–æ–¥ –∑–∞ —Ç–µ–ª–æ–º', uz: 'Kosmetika, tana parvarishi', en: 'Cosmetics, body care' },
          icon: 'üíÑ',
          createdBy: admin._id
        },
        {
          name: { ru: '–ê–≤—Ç–æ—Ç–æ–≤–∞—Ä—ã', uz: 'Avtotovarlar', en: 'Automotive' },
          slug: 'automotive',
          description: { ru: '–ó–∞–ø—á–∞—Å—Ç–∏, –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã', uz: 'Ehtiyot qismlar, aksessuarlar', en: 'Spare parts, accessories' },
          icon: 'üöó',
          createdBy: admin._id
        },
        {
          name: { ru: '–ö–Ω–∏–≥–∏', uz: 'Kitoblar', en: 'Books' },
          slug: 'books',
          description: { ru: '–ö–Ω–∏–≥–∏, —É—á–µ–±–Ω–∏–∫–∏, –∂—É—Ä–Ω–∞–ª—ã', uz: 'Kitoblar, darsliklar, jurnallar', en: 'Books, textbooks, magazines' },
          icon: 'üìö',
          createdBy: admin._id
        }
      ];

      const createdCategories = await Category.insertMany(defaultCategories);
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${createdCategories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π`);

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      createdCategories.forEach((cat, i) => {
        console.log(`${i+1}. ${cat.name.ru} (${cat.slug}) - ${cat.icon}`);
      });
    } else {
      console.log('üìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:');
      categories.forEach((cat, i) => {
        console.log(`${i+1}. ${cat.name.ru} (${cat.slug}) - ${cat.icon} - ${cat.description.ru || '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}`);
      });
    }

    await mongoose.disconnect();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

checkCategories();
