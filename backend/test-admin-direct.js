const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
const User = require('./models/User');

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
const connectDB = async () => {
  try {
    await mongoose.connect('mongodb://localhost:27017/chexoluz', {
      useNewUrlParser: true,
      useUnifiedTopology: true
    });
    console.log('‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', error);
    process.exit(1);
  }
};

const testAdminLogin = async () => {
  try {
    await connectDB();

    console.log('üîç –ò—â–µ–º –∞–¥–º–∏–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');

    // –ò—â–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é admin
    const admins = await User.find({ role: 'admin' }).select('+password');

    console.log(`–ù–∞–π–¥–µ–Ω–æ ${admins.length} –∞–¥–º–∏–Ω–æ–≤:`);

    for (const admin of admins) {
      console.log(`- Email: ${admin.email}`);
      console.log(`  ID: ${admin._id}`);
      console.log(`  –†–æ–ª—å: ${admin.role}`);
      console.log(`  –ê–∫—Ç–∏–≤–µ–Ω: ${admin.isActive}`);
      console.log(`  –ü–∞—Ä–æ–ª—å –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç: ${!!admin.password}`);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –ø–∞—Ä–æ–ª–∏
      const passwordsToTest = ['admin123456', 'admin123', 'password123', '123456'];

      for (const testPassword of passwordsToTest) {
        const isPasswordValid = await admin.checkPassword(testPassword);
        console.log(`  –ü–∞—Ä–æ–ª—å '${testPassword}' –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: ${isPasswordValid}`);

        if (isPasswordValid) {
          console.log(`‚úÖ –ù–∞–π–¥–µ–Ω —Ä–∞–±–æ—á–∏–π –∞–¥–º–∏–Ω: ${admin.email}`);
          console.log(`   –í–æ–π–¥–∏—Ç–µ —Å email: ${admin.email}, password: ${testPassword}`);
          break;
        }
      }
    }

    if (admins.length === 0) {
      console.log('‚ùå –ê–¥–º–∏–Ω–æ–≤ –≤ –±–∞–∑–µ –Ω–µ—Ç. –°–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤–æ–≥–æ...');

      const hashedPassword = await bcrypt.hash('admin123456', 12);
      const newAdmin = new User({
        email: 'admin@tendo.uz',
        password: hashedPassword,
        firstName: 'Admin',
        lastName: 'Tendo',
        phone: '+998901234568',
        role: 'admin',
        isActive: true,
        isEmailVerified: true,
        permissions: ['read:products', 'write:products', 'read:orders', 'write:orders', 'read:users', 'write:users']
      });

      await newAdmin.save();
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∞–¥–º–∏–Ω:');
      console.log(`   Email: ${newAdmin.email}`);
      console.log(`   Password: admin123456`);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await mongoose.connection.close();
    process.exit(0);
  }
};

testAdminLogin();
