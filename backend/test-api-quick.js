const axios = require('axios');

const BASE_URL = 'http://localhost:5000/api/v1';

// –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –ø—Ä–æ–¥–∞–≤—Ü–∞
const testCreateApplication = async () => {
  try {
    console.log('üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –ø—Ä–æ–¥–∞–≤—Ü–∞...');
    
    const response = await axios.post(`${BASE_URL}/seller-applications`, {
      businessName: '–¢–µ—Å—Ç–æ–≤–∞—è –ö–æ–º–ø–∞–Ω–∏—è API',
      email: 'api-test@tendo.uz',
      phone: '+998901234567',
      contactName: 'API –¢–µ—Å—Ç–µ—Ä',
      description: '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —á–µ—Ä–µ–∑ API',
      categories: ['–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', '–û–¥–µ–∂–¥–∞']
    });
    
    console.log('‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞:', response.data);
    return response.data.data.id;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏:', error.response?.data || error.message);
    return null;
  }
};

// –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫ (–∞–¥–º–∏–Ω)
const testGetApplications = async () => {
  try {
    console.log('\nüìã –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ (–∞–¥–º–∏–Ω)...');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞–¥–º–∏–Ω —Ç–æ–∫–µ–Ω
    const adminToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YjU1NTJiMzFmMGU0NjViMDViMGNjNiIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc1NjkwMDU5NSwiZXhwIjoxNzU3NTA1Mzk1fQ.hLQDe2WYpIsdjoBWS_BWKUN59itJN-0biUQBq6QHgto';
    
    const response = await axios.get(`${BASE_URL}/admin/seller-applications`, {
      headers: {
        Authorization: `Bearer ${adminToken}`
      }
    });
    
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${response.data.count} –∑–∞—è–≤–æ–∫ –∏–∑ ${response.data.total}`);
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫:', error.response?.data || error.message);
    return false;
  }
};

// –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞—è–≤–æ–∫
const testGetStats = async () => {
  try {
    console.log('\nüìä –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞—è–≤–æ–∫...');
    
    const adminToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YjU1NTJiMzFmMGU0NjViMDViMGNjNiIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc1NjkwMDU5NSwiZXhwIjoxNzU3NTA1Mzk1fQ.hLQDe2WYpIsdjoBWS_BWKUN59itJN-0biUQBq6QHgto';
    
    const response = await axios.get(`${BASE_URL}/admin/seller-applications/stats`, {
      headers: {
        Authorization: `Bearer ${adminToken}`
      }
    });
    
    console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', response.data.data);
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error.response?.data || error.message);
    return false;
  }
};

// –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
const runAllTests = async () => {
  console.log('üöÄ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –ó–ê–Ø–í–û–ö –ü–†–û–î–ê–í–¶–û–í\n');
  
  const applicationId = await testCreateApplication();
  const gotApplications = await testGetApplications(); 
  const gotStats = await testGetStats();
  
  console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏: ${applicationId ? '–£–°–ü–ï–®–ù–û' : '–û–®–ò–ë–ö–ê'}`);
  console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫: ${gotApplications ? '–£–°–ü–ï–®–ù–û' : '–û–®–ò–ë–ö–ê'}`);
  console.log(`‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${gotStats ? '–£–°–ü–ï–®–ù–û' : '–û–®–ò–ë–ö–ê'}`);
  
  if (applicationId && gotApplications && gotStats) {
    console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û! –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!');
  } else {
    console.log('\n‚ö†Ô∏è –ï—Å—Ç—å –æ—à–∏–±–∫–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ.');
  }
  
  process.exit(0);
};

runAllTests();

