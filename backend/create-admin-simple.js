const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');

async function createAdminSimple() {
  try {
    await mongoose.connect('mongodb://localhost:27017/tendomarketuz');

    // –°–æ–∑–¥–∞–µ–º —Å—Ö–µ–º—É –Ω–∞–ø—Ä—è–º—É—é
    const userSchema = new mongoose.Schema({
      email: String,
      password: String,
      firstName: String,
      lastName: String,
      phone: String,
      role: String,
      isActive: Boolean,
      isEmailVerified: Boolean
    });

    const User = mongoose.model('User', userSchema);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∞–¥–º–∏–Ω–∞
    let admin = await User.findOne({ email: 'admin@market.com' });

    if (!admin) {
      console.log('–°–æ–∑–¥–∞—é –∞–¥–º–∏–Ω–∞...');
      const hashedPassword = await bcrypt.hash('admin123456', 12);

      admin = new User({
        email: 'admin@market.com',
        password: hashedPassword,
        firstName: 'Admin',
        lastName: 'Market',
        phone: '+998901234567',
        role: 'admin',
        isActive: true,
        isEmailVerified: true
      });

      await admin.save();
      console.log('‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω');
    } else {
      console.log('‚úÖ –ê–¥–º–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }

    console.log('üìß Email: admin@market.com');
    console.log('üîë Password: admin123456');

    await mongoose.disconnect();

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

createAdminSimple();




