const { connectDB } = require('./config/database');
const User = require('./models/User');
const bcrypt = require('bcryptjs');

const resetAdminPassword = async () => {
  try {
    console.log('üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    await connectDB();
    
    const admin = await User.findOne({ 
      role: { $in: ['admin', 'super_admin', 'moderator'] } 
    });
    
    if (!admin) {
      console.log('‚ùå –ê–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      process.exit(1);
    }
    
    // –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
    const newPassword = 'admin123456';
    const hashedPassword = await bcrypt.hash(newPassword, 12);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º permissions
    admin.password = hashedPassword;
    admin.permissions = [
      'read:products',
      'write:products', 
      'read:orders',
      'write:orders',
      'read:users',
      'write:users',
      'read:analytics',
      'manage:site'
    ];
    admin.isActive = true;
    admin.isEmailVerified = true;
    
    await admin.save();
    
    console.log('');
    console.log('üü° ==========================================');
    console.log('üéâ    –ü–ê–†–û–õ–¨ –ê–î–ú–ò–ù–ê –°–ë–†–û–®–ï–ù!');
    console.log('üü° ==========================================');
    console.log(`üìß Email:     ${admin.email}`);
    console.log(`üîê –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:    ${newPassword}`);
    console.log(`üåç –ê–¥–º–∏–Ω–∫–∞:   http://localhost:5001`);
    console.log('üü° ==========================================');
    console.log('');
    console.log('‚ö†Ô∏è  –í–ê–ñ–ù–û: –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞!');
    console.log('');
    
    process.exit(0);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è:', error.message);
    process.exit(1);
  }
};

resetAdminPassword();
