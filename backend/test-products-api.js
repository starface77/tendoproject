// –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π fetch (Node.js 18+)

const testProductsApi = async () => {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Ç–æ–≤–∞—Ä–æ–≤...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    console.log('1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ API...');
    const healthResponse = await fetch('http://localhost:5000/api/v1/health');
    const healthData = await healthResponse.json();
    console.log('   –°—Ç–∞—Ç—É—Å API:', healthData.success ? '‚úÖ' : '‚ùå');

    if (!healthData.success) {
      console.log('‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      return;
    }

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã
    console.log('\n2. –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã...');
    const productsResponse = await fetch('http://localhost:5000/api/v1/products');
    const productsData = await productsResponse.json();

    console.log('   –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', productsResponse.status);
    console.log('   –£—Å–ø–µ—à–Ω–æ:', productsData.success);
    console.log('   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤:', productsData.count || 0);

    if (productsData.success && productsData.data && productsData.data.length > 0) {
      console.log('\nüìã –ü–µ—Ä–≤—ã–µ 3 —Ç–æ–≤–∞—Ä–∞:');
      productsData.data.slice(0, 3).forEach((product, index) => {
        console.log(`\n${index + 1}. ${product.name?.ru || product.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}`);
        console.log(`   ID: ${product._id}`);
        console.log(`   –°—Ç–∞—Ç—É—Å: ${product.status}`);
        console.log(`   –ê–∫—Ç–∏–≤–µ–Ω: ${product.isActive}`);
        console.log(`   –¶–µ–Ω–∞: ${product.price}`);
        console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${product.category?.name?.ru || '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'}`);
      });
    } else {
      console.log('‚ö†Ô∏è –¢–æ–≤–∞—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –æ—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ');

      if (productsData.error) {
        console.log('   –û—à–∏–±–∫–∞:', productsData.error);
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    console.log('\n3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Å—Ç–∞—Ç—É—Å–∞...');
    const allProductsResponse = await fetch('http://localhost:5000/api/v1/products?limit=50');
    const allProductsData = await allProductsResponse.json();

    console.log('   –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ë–î:', allProductsData.total || 0);

    if (allProductsData.data && allProductsData.data.length > 0) {
      console.log('\nüìã –í—Å–µ —Ç–æ–≤–∞—Ä—ã —Å –∏—Ö —Å—Ç–∞—Ç—É—Å–∞–º–∏:');
      allProductsData.data.forEach((product, index) => {
        console.log(`${index + 1}. ${product.name?.ru || product.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'} - –°—Ç–∞—Ç—É—Å: ${product.status}, –ê–∫—Ç–∏–≤–µ–Ω: ${product.isActive}`);
      });
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
};

testProductsApi();
