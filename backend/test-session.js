const axios = require('axios');

const API_BASE = 'http://localhost:5000/api/v1';
const TEST_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YmQ2YzEwM2UyNTk0NmEyYWM2MDk0YiIsImVtYWlsIjoiYWRtaW5AdGVuZG8udXoiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3NTczMzY5NTMsImV4cCI6MTc1Nzk0MTc1M30.6q6dF5e8q6dF5e8q6dF5e8q6dF5e8q6dF5e8q6dF5e8';

async function testSession() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –∞–¥–º–∏–Ω–∞...');

  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ /auth/me —Å —Ç–æ–∫–µ–Ω–æ–º
    console.log('\n1Ô∏è‚É£ –¢–µ—Å—Ç: /auth/me —Å —Ç–æ–∫–µ–Ω–æ–º');
    const response = await axios.get(`${API_BASE}/auth/me`, {
      headers: {
        'Authorization': `Bearer ${TEST_TOKEN}`
      }
    });

    if (response.data.success) {
      console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', response.data.data.email);
      console.log('üë§ –†–æ–ª—å:', response.data.data.role);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞:', response.data.error);
    }

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç: /auth/me –±–µ–∑ —Ç–æ–∫–µ–Ω–∞');
    try {
      await axios.get(`${API_BASE}/auth/me`);
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ! 401 –æ—à–∏–±–∫–∞ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞');
      } else {
        console.log('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', error.response?.status);
      }
    }

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç: /auth/me —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º');
    try {
      await axios.get(`${API_BASE}/auth/me`, {
        headers: {
          'Authorization': 'Bearer invalid_token'
        }
      });
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ! 401 –æ—à–∏–±–∫–∞ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º');
      } else {
        console.log('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', error.response?.status);
      }
    }

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

testSession();
