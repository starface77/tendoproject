const bcrypt = require('bcryptjs');

const testSimplePassword = async () => {
  try {
    const password = 'admin123456';
    
    console.log(`üîê –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å: ${password}`);
    
    // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
    const saltRounds = 12;
    const hashedPassword = await bcrypt.hash(password, saltRounds);
    
    console.log(`‚úÖ –ü–∞—Ä–æ–ª—å –∑–∞—Ö–µ—à–∏—Ä–æ–≤–∞–Ω:`);
    console.log(`   –•–µ—à: ${hashedPassword}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å
    const isMatch = await bcrypt.compare(password, hashedPassword);
    console.log(`   –ü—Ä–æ–≤–µ—Ä–∫–∞: ${isMatch}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
    const wrongPassword = 'wrongpassword';
    const isWrongMatch = await bcrypt.compare(wrongPassword, hashedPassword);
    console.log(`   –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${isWrongMatch}`);
    
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  }
};

testSimplePassword();

