require('dotenv').config();
const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
const User = require('./models/User');

async function createFinalAdmin() {
  try {
    await mongoose.connect(process.env.MONGO_URI || 'mongodb://localhost:27017/tendo-market');
    console.log('üîó –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ MongoDB');

    // –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤
    await User.deleteMany({ role: 'admin' });
    console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω—ã –í–°–ï –∞–¥–º–∏–Ω—ã');

    // –°–æ–∑–¥–∞–µ–º –ø–∞—Ä–æ–ª—å –Ω–∞–ø—Ä—è–º—É—é —Å bcrypt
    const password = 'admin123';
    console.log('üîê –°–æ–∑–¥–∞—é —Ö–µ—à –¥–ª—è –ø–∞—Ä–æ–ª—è:', password);
    
    const salt = await bcrypt.genSalt(10);
    const hashedPassword = await bcrypt.hash(password, salt);
    console.log('‚úÖ –•–µ—à —Å–æ–∑–¥–∞–Ω:', hashedPassword);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ö–µ—à –°–†–ê–ó–£
    const testResult = await bcrypt.compare(password, hashedPassword);
    console.log('üß™ –¢–µ—Å—Ç —Ö–µ—à–∞:', testResult);

    if (!testResult) {
      console.error('‚ùå –û–®–ò–ë–ö–ê: —Ö–µ—à –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ç–µ—Å—Ç!');
      process.exit(1);
    }

    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞ –ë–ï–ó middleware User –º–æ–¥–µ–ª–∏
    const adminData = {
      firstName: 'Admin',
      lastName: 'Super',
      email: 'admin@tendo.uz',
      password: hashedPassword, // –£–ñ–ï —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π!
      role: 'admin',
      isActive: true,
      isVerified: true,
      language: 'ru',
      createdAt: new Date(),
      updatedAt: new Date()
    };

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–ø—Ä—è–º—É—é –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é, –º–∏–Ω—É—è middleware
    const db = mongoose.connection.db;
    const result = await db.collection('users').insertOne(adminData);
    console.log('‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω –Ω–∞–ø—Ä—è–º—É—é –≤ MongoDB!');
    console.log('   ID:', result.insertedId);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
    const createdAdmin = await User.findById(result.insertedId);
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞:');
    console.log('   Email:', createdAdmin.email);
    console.log('   Role:', createdAdmin.role);
    console.log('   Password hash:', createdAdmin.password);

    // –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø–∞—Ä–æ–ª—è
    const finalTest = await bcrypt.compare('admin123', createdAdmin.password);
    console.log('üöÄ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ü–ê–†–û–õ–Ø:', finalTest);

    if (finalTest) {
      console.log('');
      console.log('üéâ –£–°–ü–ï–•! –ê–î–ú–ò–ù –†–ê–ë–û–¢–ê–ï–¢!');
      console.log('üìß Email: admin@tendo.uz');
      console.log('üîë Password: admin123');
      console.log('');
    } else {
      console.error('‚ùå –í–°–ï –ï–©–ï –ù–ï –†–ê–ë–û–¢–ê–ï–¢!');
    }

    mongoose.connection.close();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

createFinalAdmin();





