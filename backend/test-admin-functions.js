const mongoose = require('mongoose');
const User = require('./models/User');
const bcrypt = require('bcryptjs');
const jwt = require('jsonwebtoken');

async function testAdminFunctions() {
  try {
    console.log('üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB...');
    await mongoose.connect('mongodb://localhost:27017/tendo-market');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    let admin = await User.findOne({ email: 'admin@market.com' });

    if (!admin) {
      console.log('üëë –°–æ–∑–¥–∞—é –∞–¥–º–∏–Ω–∞...');
      const hashedPassword = await bcrypt.hash('admin123456', 12);

      admin = await User.create({
        email: 'admin@market.com',
        password: hashedPassword,
        firstName: 'Admin',
        lastName: 'Market',
        phone: '+998901234567',
        role: 'admin',
        isActive: true,
        isEmailVerified: true
      });
      console.log('‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω');
    } else {
      console.log('‚úÖ –ê–¥–º–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }

    // –°–æ–∑–¥–∞–µ–º JWT —Ç–æ–∫–µ–Ω
    const token = jwt.sign(
      { id: admin._id, role: admin.role },
      'super_secret_jwt_key_for_demo_development_only_change_in_production_2025',
      { expiresIn: '7d' }
    );

    console.log('üîë JWT —Ç–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω');
    console.log('üìß Email: admin@market.com');
    console.log('üîê Password: admin123456');
    console.log('üé´ Token:', token.substring(0, 50) + '...');

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const Category = require('./models/Category');
    let category = await Category.findOne({ slug: 'electronics' });

    if (!category) {
      console.log('üìÇ –°–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é...');
      category = await Category.create({
        name: {
          ru: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
          uz: 'Elektronika',
          en: 'Electronics'
        },
        slug: 'electronics',
        description: {
          ru: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –≥–∞–¥–∂–µ—Ç—ã',
          uz: 'Elektronika va gadjetlar',
          en: 'Electronics and gadgets'
        },
        icon: 'üì±',
        createdBy: admin._id
      });
      console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞');
    } else {
      console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }

    console.log('üìã –ö–∞—Ç–µ–≥–æ—Ä–∏—è ID:', category._id);

    await mongoose.disconnect();
    console.log('‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç MongoDB');

    return { admin, token, category };

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    await mongoose.disconnect();
  }
}

testAdminFunctions();




