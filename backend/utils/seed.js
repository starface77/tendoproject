const mongoose = require('mongoose');
const User = require('../models/User');
const Category = require('../models/Category');
const Product = require('../models/Product');
const { connectDB } = require('../config/database');

/**
 * üå± –°–ò–î–ï–† –î–õ–Ø –ó–ê–ü–û–õ–ù–ï–ù–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–•
 * –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
 */

const createAdminUser = async () => {
  try {
    const adminUser = new User({
      email: 'admin@chexol.uz',
      password: 'admin123',
      firstName: 'Admin',
      lastName: 'Market',
      phone: '+998901234567',
      city: 'tashkent',
      role: 'admin',
      isActive: true,
      isVerified: true
    });

    await adminUser.save();
    console.log('‚úÖ –ê–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω');
    return adminUser;
  } catch (error) {
    console.log('‚ö†Ô∏è  –ê–¥–º–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞:', error.message);
  }
};

const createCategories = async (adminId) => {
  try {
    const categories = [
      {
        name: { ru: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', uz: 'Elektronika', en: 'Electronics' },
        slug: 'electronics',
        description: { ru: '–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã', uz: 'Smartfonlar va aksessuarlar', en: 'Phones and accessories' },
        icon: 'üì±',
        isActive: true,
        order: 1,
        createdBy: adminId
      },
      {
        name: { ru: '–ß–µ—Ö–ª—ã –¥–ª—è iPhone', uz: 'iPhone uchun qoplamalar', en: 'iPhone Cases' },
        slug: 'iphone-cases',
        description: { ru: '–ó–∞—â–∏—Ç–Ω—ã–µ —á–µ—Ö–ª—ã –¥–ª—è iPhone', uz: 'iPhone uchun himoya qoplamalari', en: 'Protective cases for iPhone' },
        icon: 'üì±',
        parent: null,
        isActive: true,
        order: 2,
        createdBy: adminId
      }
    ];

    for (const categoryData of categories) {
      const existingCategory = await Category.findOne({ slug: categoryData.slug });
      if (!existingCategory) {
        await Category.create(categoryData);
      }
    }

    console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
  }
};

const createTestProducts = async (adminId) => {
  try {
    const category = await Category.findOne({ slug: 'iphone-cases' });

    if (!category) {
      console.log('‚ö†Ô∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤');
      return;
    }

    const products = [
      {
        name: { ru: '–ß–µ—Ö–æ–ª –¥–ª—è iPhone 15 Pro', uz: 'iPhone 15 Pro uchun qoplama', en: 'Case for iPhone 15 Pro' },
        description: { ru: '–ó–∞—â–∏—Ç–Ω—ã–π —Å–∏–ª–∏–∫–æ–Ω–æ–≤—ã–π —á–µ—Ö–æ–ª —Å –º–∞–≥–Ω–∏—Ç–Ω–æ–π –∑–∞—Ä—è–¥–∫–æ–π', uz: 'Himoya silikon qoplama magnit zaryadka bilan', en: 'Protective silicone case with magnetic charging' },
        price: 150000,
        originalPrice: 180000,
        category: category._id,
        brand: 'Apple',
        model: 'iPhone 15 Pro',
        material: 'silicone',
        images: ['/uploads/case1.jpg'],
        stock: 50,
        isActive: true,
        isNew: true,
        features: ['wireless_charging', 'shockProof', 'dropProtection'],
        protection: {
          shockProof: true,
          waterProof: false,
          dustProof: false,
          scratchResistant: true,
          dropProtection: 'advanced'
        },
        createdBy: adminId
      },
      {
        name: { ru: '–ß–µ—Ö–æ–ª –¥–ª—è iPhone 14', uz: 'iPhone 14 uchun qoplama', en: 'Case for iPhone 14' },
        description: { ru: '–¢–æ–Ω–∫–∏–π –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π —á–µ—Ö–æ–ª —Å –∞–Ω—Ç–∏–±–∞–∫—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º', uz: 'Yupqa shaffof qoplama antibakterial qoplama bilan', en: 'Thin transparent case with antibacterial coating' },
        price: 120000,
        category: category._id,
        brand: 'Apple',
        model: 'iPhone 14',
        material: 'plastic',
        images: ['/uploads/case2.jpg'],
        stock: 30,
        isActive: true,
        features: ['transparent', 'anti_bacterial'],
        protection: {
          shockProof: false,
          waterProof: false,
          dustProof: false,
          scratchResistant: true,
          dropProtection: 'basic'
        },
        createdBy: adminId
      }
    ];

    for (const productData of products) {
      const existingProduct = await Product.findOne({
        'name.ru': productData.name.ru,
        brand: productData.brand,
        model: productData.model
      });

      if (!existingProduct) {
        await Product.create(productData);
      }
    }

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã —Å–æ–∑–¥–∞–Ω—ã');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤:', error);
  }
};

const seedDatabase = async () => {
  try {
    console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    await connectDB();

    // –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞
    const admin = await createAdminUser();

    // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    if (admin) {
      await createCategories(admin._id);
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
    if (admin) {
      await createTestProducts(admin._id);
    }

    console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!');
    process.exit(0);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
    process.exit(1);
  }
};

// –ó–∞–ø—É—Å–∫ —Å–∏–¥–µ—Ä–∞
if (require.main === module) {
  seedDatabase();
}

module.exports = { seedDatabase, createAdminUser, createCategories, createTestProducts };
