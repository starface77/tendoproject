const mongoose = require('mongoose');
const { connectDB } = require('./config/database');

const clearEntireDB = async () => {
  try {
    console.log('üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    await connectDB();

    console.log('üóëÔ∏è –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    const collections = mongoose.connection.collections;

    // –û—á–∏—â–∞–µ–º –∫–∞–∂–¥—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é
    for (const collectionName in collections) {
      console.log(`üóëÔ∏è –û—á–∏—â–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é: ${collectionName}`);
      await collections[collectionName].deleteMany({});
    }

    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞!');

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
    console.log('üëë –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞...');

    const User = require('./models/User');
    const bcrypt = require('bcryptjs');

    const email = 'superadmin@tendo.uz';
    const password = 'admin123456';

    // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
    const hashedPassword = await bcrypt.hash(password, 12);

    const newAdmin = new User({
      email,
      password: hashedPassword,
      firstName: 'Admin',
      lastName: 'Tendo',
      phone: '+998901234569',
      role: 'admin',
      isActive: true,
      isEmailVerified: true,
      permissions: [
        'read:products',
        'write:products',
        'read:orders',
        'write:orders',
        'read:users',
        'write:users',
        'read:analytics',
        'manage:site'
      ]
    });

    await newAdmin.save();

    console.log('‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üìß Email: ${email}`);
    console.log(`üîë –ü–∞—Ä–æ–ª—å: ${password}`);
    console.log(`üÜî ID: ${newAdmin._id}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å
    const isValid = await newAdmin.checkPassword(password);
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è: ${isValid}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await mongoose.connection.close();
    process.exit(0);
  }
};

clearEntireDB();
