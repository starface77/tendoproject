const mongoose = require('mongoose');
const SellerApplication = require('./models/SellerApplication');
const User = require('./models/User');
const bcrypt = require('bcryptjs');

async function createPendingApp() {
  try {
    await mongoose.connect('mongodb://localhost:27017/tendo-market');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    // –°–æ–∑–¥–∞–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const existingUser = await User.findOne({ email: 'pending@example.com' });
    let user;

    if (!existingUser) {
      const hashedPassword = await bcrypt.hash('password123', 12);
      user = await User.create({
        firstName: '–ü–µ—Ç—Ä',
        lastName: '–ü–µ—Ç—Ä–æ–≤',
        email: 'pending@example.com',
        password: hashedPassword,
        role: 'user',
        isActive: true
      });
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:', user._id);
    } else {
      user = existingUser;
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', user._id);
    }

    // –°–æ–∑–¥–∞–¥–∏–º –∑–∞—è–≤–∫—É
    const existingApp = await SellerApplication.findOne({ email: 'pending@example.com' });
    if (existingApp) {
      console.log('‚úÖ –ó–∞—è–≤–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', existingApp._id);
      console.log('üìä –°—Ç–∞—Ç—É—Å:', existingApp.status);
      return;
    }

    const application = await SellerApplication.create({
      businessName: 'Pending Test Company',
      businessType: 'individual',
      contactName: '–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤',
      email: 'pending@example.com',
      phone: '+998901234568',
      address: '–¢–∞—à–∫–µ–Ω—Ç, —É–ª. –û–∂–∏–¥–∞–Ω–∏—è, –¥. 456',
      categories: ['–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞'],
      productTypes: '–ü—Ä–æ–¥–∞–∂–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏ –∏ –≥–∞–¥–∂–µ—Ç–æ–≤',
      monthlyVolume: 'under_1m',
      experience: 'under_1_year',
      agreesToTerms: true,
      marketingConsent: false
    });

    console.log('‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞:');
    console.log('üìã ID:', application._id);
    console.log('üè¢ –ù–∞–∑–≤–∞–Ω–∏–µ:', application.businessName);
    console.log('üìß Email:', application.email);
    console.log('üìä –°—Ç–∞—Ç—É—Å:', application.status);

    await mongoose.disconnect();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

createPendingApp();




