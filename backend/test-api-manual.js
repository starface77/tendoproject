const mongoose = require('mongoose');
const jwt = require('jsonwebtoken');
const User = require('./models/User');
const SellerApplication = require('./models/SellerApplication');

async function testAPIManual() {
  try {
    await mongoose.connect('mongodb://localhost:27017/tendo-market');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    // –ù–∞–π–¥–µ–º –∞–¥–º–∏–Ω–∞
    const admin = await User.findOne({ role: 'admin' });
    if (!admin) {
      console.log('‚ùå –ê–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    console.log('‚úÖ –ê–¥–º–∏–Ω –Ω–∞–π–¥–µ–Ω:', admin._id);

    // –°–æ–∑–¥–∞–¥–∏–º JWT —Ç–æ–∫–µ–Ω
    const token = jwt.sign(
      { id: admin._id, role: admin.role },
      process.env.JWT_SECRET || 'super_secret_jwt_key_for_demo_development_only_change_in_production_2025',
      { expiresIn: '7d' }
    );

    console.log('üîë –¢–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω');

    // –ù–∞–π–¥–µ–º –∑–∞—è–≤–∫—É
    const application = await SellerApplication.findOne({ email: 'test@example.com' });
    if (!application) {
      console.log('‚ùå –ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }

    console.log('üìã –ó–∞—è–≤–∫–∞ –Ω–∞–π–¥–µ–Ω–∞:', application._id);
    console.log('üìä –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:', application.status);

    // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–ø—Ä—è–º—É—é –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
    application.status = 'approved';
    application.reviewedAt = new Date();
    application.reviewedBy = admin._id;
    await application.save();

    console.log('‚úÖ –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞ –≤—Ä—É—á–Ω—É—é!');
    console.log('üìä –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:', application.status);

    // –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è
    const updatedApplication = await SellerApplication.findById(application._id);
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞:', updatedApplication.status);

    await mongoose.disconnect();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

testAPIManual();




