const mongoose = require('mongoose');
const SellerApplication = require('./models/SellerApplication');

async function testApproveAPI() {
  try {
    await mongoose.connect('mongodb://localhost:27017/tendo-market');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    // –ù–∞–π–¥–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É
    const application = await SellerApplication.findOne({ email: 'test@example.com' });
    if (!application) {
      console.log('‚ùå –ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }

    console.log('üìã –ù–∞–π–¥–µ–Ω–∞ –∑–∞—è–≤–∫–∞:', application._id);
    console.log('üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:', application.status);

    // –ü–æ–ø—Ä–æ–±—É–µ–º –æ–¥–æ–±—Ä–∏—Ç—å –∑–∞—è–≤–∫—É
    application.status = 'approved';
    application.reviewedAt = new Date();
    application.reviewedBy = 'test-admin'; // –î–ª—è —Ç–µ—Å—Ç–∞

    await application.save();

    console.log('‚úÖ –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!');
    console.log('üìä –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:', application.status);
    console.log('üìÖ –î–∞—Ç–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è:', application.reviewedAt);

    await mongoose.disconnect();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

testApproveAPI();




