require('dotenv').config();
const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
const User = require('./models/User');

async function fixAdminPassword() {
  try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await mongoose.connect(process.env.MONGO_URI || 'mongodb://localhost:27017/tendo-market');
    console.log('üîó –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ MongoDB');

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∞–¥–º–∏–Ω–æ–≤
    await User.deleteMany({ role: 'admin' });
    console.log('üóëÔ∏è –£–¥–∞–ª–∏–ª —Å—Ç–∞—Ä—ã—Ö –∞–¥–º–∏–Ω–æ–≤');

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞ —Å –ø—Ä–æ—Å—Ç—ã–º –ø–∞—Ä–æ–ª–µ–º
    const adminData = {
      firstName: 'Admin',
      lastName: 'Tendo',
      email: 'admin@tendo.uz',
      password: 'admin123', // –ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä–æ–ª—å
      role: 'admin',
      isActive: true,
      language: 'ru'
    };

    console.log('üîê –•–µ—à–∏—Ä—É—é –ø–∞—Ä–æ–ª—å...');
    const salt = await bcrypt.genSalt(12);
    const hashedPassword = await bcrypt.hash(adminData.password, salt);
    
    console.log('üîç –¢–µ—Å—Ç —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log('   –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å:', adminData.password);
    console.log('   –•–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å:', hashedPassword);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
    const isMatch = await bcrypt.compare('admin123', hashedPassword);
    console.log('   –¢–µ—Å—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è bcrypt.compare("admin123", hash):', isMatch);

    if (!isMatch) {
      console.error('‚ùå –û—à–∏–±–∫–∞: —Ç–µ—Å—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –Ω–µ –ø—Ä–æ—à–µ–ª!');
      process.exit(1);
    }

    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
    const admin = new User({
      ...adminData,
      password: hashedPassword
    });

    await admin.save();
    console.log('‚úÖ –ù–æ–≤—ã–π –∞–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º!');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
    const savedAdmin = await User.findOne({ email: 'admin@tendo.uz' });
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞:');
    console.log('   Email:', savedAdmin.email);
    console.log('   Role:', savedAdmin.role);
    console.log('   Active:', savedAdmin.isActive);
    console.log('   Password hash length:', savedAdmin.password.length);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å –µ—â–µ —Ä–∞–∑
    const finalTest = await bcrypt.compare('admin123', savedAdmin.password);
    console.log('   –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø–∞—Ä–æ–ª—è:', finalTest);

    console.log('');
    console.log('üéØ –î–ê–ù–ù–´–ï –î–õ–Ø –í–•–û–î–ê:');
    console.log('üìß Email: admin@tendo.uz');
    console.log('üîë Password: admin123');
    console.log('');

    mongoose.connection.close();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    console.error(error.stack);
    process.exit(1);
  }
}

fixAdminPassword();