/**
 * üõ†Ô∏è CHEXOL.UZ ADMIN PANEL
 * –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–æ–º
 */

const express = require('express');
const cors = require('cors');
const path = require('path');
require('dotenv').config({ path: './.env' });

// –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
const { connectDB } = require('../config/database');

// –ò–º–ø–æ—Ä—Ç –∞–¥–º–∏–Ω—Å–∫–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
const authRoutes = require('./routes/auth');
const dashboardRoutes = require('./routes/dashboard');
const productsRoutes = require('./routes/products');
const categoriesRoutes = require('./routes/categories');
const ordersRoutes = require('./routes/orders');
const usersRoutes = require('./routes/users');
const analyticsRoutes = require('./routes/analytics');
const settingsRoutes = require('./routes/settings');

// –°–æ–∑–¥–∞–Ω–∏–µ Express –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = express();

// üåê CORS –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
const corsOptions = {
  origin: [
    process.env.ADMIN_FRONTEND_URL || 'http://localhost:3001',
    'http://localhost:3001'
  ],
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH'],
  allowedHeaders: ['Content-Type', 'Authorization'],
  credentials: true
};
app.use(cors(corsOptions));

// üîÑ –ü–ê–†–°–ò–ù–ì –î–ê–ù–ù–´–•
app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

// üìÅ –°–¢–ê–¢–ò–ß–ï–°–ö–ò–ï –§–ê–ô–õ–´ (–∞–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å)
app.use(express.static(path.join(__dirname, 'public')));

// üè• HEALTH CHECK
app.get('/health', (req, res) => {
  res.status(200).json({
    status: 'success',
    message: 'Chexol.uz Admin Panel —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ',
    timestamp: new Date().toISOString(),
    uptime: process.uptime()
  });
});

// üìç –ê–î–ú–ò–ù–°–ö–ò–ï –ú–ê–†–®–†–£–¢–´
app.use('/api/auth', authRoutes);
app.use('/api/dashboard', dashboardRoutes);
app.use('/api/products', productsRoutes);
app.use('/api/categories', categoriesRoutes);
app.use('/api/orders', ordersRoutes);
app.use('/api/users', usersRoutes);
app.use('/api/analytics', analyticsRoutes);
app.use('/api/settings', settingsRoutes);

// 404 –¥–ª—è API –º–∞—Ä—à—Ä—É—Ç–æ–≤
app.use('/api/*', (req, res) => {
  res.status(404).json({
    success: false,
    error: 'API endpoint not found'
  });
});

// üìã –ì–õ–ê–í–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê –ê–î–ú–ò–ù–ö–ò –ò SPA –ú–ê–†–®–†–£–¢–´
app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// üöÄ –ó–ê–ü–£–°–ö –ê–î–ú–ò–ù–°–ö–û–ì–û –°–ï–†–í–ï–†–ê
const PORT = process.env.ADMIN_PORT || 5001;

const startAdminServer = async () => {
  try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await connectDB();
    
    // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    const server = app.listen(PORT, () => {
      console.log('');
      console.log('üü° ==========================================');
      console.log('üõ†Ô∏è    CHEXOL.UZ ADMIN PANEL –ó–ê–ü–£–©–ï–ù');
      console.log('üü° ==========================================');
      console.log(`üìç –ê–¥–º–∏–Ω–∫–∞:       http://localhost:${PORT}`);
      console.log(`üîê API:           http://localhost:${PORT}/api`);
      console.log(`üè• Health:        http://localhost:${PORT}/health`);
      console.log(`üåç –°—Ä–µ–¥–∞:         ${process.env.NODE_ENV || 'development'}`);
      console.log('üü° ==========================================');
      console.log('');
    });

    // –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
    process.on('SIGTERM', () => {
      console.log('üîÑ –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–∫—Ä—ã—Ç–∏–µ –∞–¥–º–∏–Ω —Å–µ—Ä–≤–µ—Ä–∞...');
      server.close(() => {
        console.log('‚úÖ –ê–¥–º–∏–Ω —Å–µ—Ä–≤–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–∫—Ä—ã—Ç');
        process.exit(0);
      });
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–¥–º–∏–Ω —Å–µ—Ä–≤–µ—Ä–∞:', error.message);
    process.exit(1);
  }
};

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
if (require.main === module) {
  startAdminServer();
}

module.exports = app;
