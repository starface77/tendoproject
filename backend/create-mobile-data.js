/**
 * üì± –°–û–ó–î–ê–ù–ò–ï –î–ê–ù–ù–´–• –î–õ–Ø –ú–û–ë–ò–õ–¨–ù–û–ì–û –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
 * –î–æ–±–∞–≤–ª—è–µ–º featured —Ç–æ–≤–∞—Ä—ã –∏ –≥–æ—Ä–æ–¥–∞
 */

const { connectDB } = require('./config/database');
const Product = require('./models/Product');
const City = require('./models/City');

const createMobileData = async () => {
  try {
    console.log('üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    await connectDB();

    // 1. –°–æ–∑–¥–∞–µ–º –≥–æ—Ä–æ–¥–∞
    console.log('\nüèôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–æ–≤...');
    const cities = [
      { 
        name: { ru: '–¢–∞—à–∫–µ–Ω—Ç', uz: 'Toshkent', en: 'Tashkent' },
        slug: 'tashkent', 
        code: 'tashkent',
        region: { ru: '–¢–∞—à–∫–µ–Ω—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', uz: 'Toshkent viloyati', en: 'Tashkent Region' },
        coordinates: { latitude: 41.2995, longitude: 69.2401 },
        isActive: true, 
        order: 1 
      },
      { 
        name: { ru: '–°–∞–º–∞—Ä–∫–∞–Ω–¥', uz: 'Samarqand', en: 'Samarkand' },
        slug: 'samarkand', 
        code: 'samarkand',
        region: { ru: '–°–∞–º–∞—Ä–∫–∞–Ω–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', uz: 'Samarqand viloyati', en: 'Samarkand Region' },
        coordinates: { latitude: 39.6270, longitude: 66.9749 },
        isActive: true, 
        order: 2 
      },
      { 
        name: { ru: '–ë—É—Ö–∞—Ä–∞', uz: 'Buxoro', en: 'Bukhara' },
        slug: 'bukhara', 
        code: 'bukhara',
        region: { ru: '–ë—É—Ö–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', uz: 'Buxoro viloyati', en: 'Bukhara Region' },
        coordinates: { latitude: 39.7684, longitude: 64.4556 },
        isActive: true, 
        order: 3 
      },
      { 
        name: { ru: '–ê–Ω–¥–∏–∂–∞–Ω', uz: 'Andijon', en: 'Andijan' },
        slug: 'andijan', 
        code: 'andijan',
        region: { ru: '–ê–Ω–¥–∏–∂–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', uz: 'Andijon viloyati', en: 'Andijan Region' },
        coordinates: { latitude: 40.7833, longitude: 72.3500 },
        isActive: true, 
        order: 4 
      },
      { 
        name: { ru: '–§–µ—Ä–≥–∞–Ω–∞', uz: 'Farg\'ona', en: 'Fergana' },
        slug: 'fergana', 
        code: 'fergana',
        region: { ru: '–§–µ—Ä–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', uz: 'Farg\'ona viloyati', en: 'Fergana Region' },
        coordinates: { latitude: 40.3864, longitude: 71.7864 },
        isActive: true, 
        order: 5 
      },
      { 
        name: { ru: '–ù–∞–º–∞–Ω–≥–∞–Ω', uz: 'Namangan', en: 'Namangan' },
        slug: 'namangan', 
        code: 'namangan',
        region: { ru: '–ù–∞–º–∞–Ω–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', uz: 'Namangan viloyati', en: 'Namangan Region' },
        coordinates: { latitude: 41.0000, longitude: 71.6667 },
        isActive: true, 
        order: 6 
      },
      { 
        name: { ru: '–ö–∞—Ä—à–∏', uz: 'Qarshi', en: 'Karshi' },
        slug: 'karshi', 
        code: 'karshi',
        region: { ru: '–ö–∞—à–∫–∞–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', uz: 'Qashqadaryo viloyati', en: 'Kashkadarya Region' },
        coordinates: { latitude: 38.8606, longitude: 65.7891 },
        isActive: true, 
        order: 7 
      },
      { 
        name: { ru: '–ù—É–∫—É—Å', uz: 'Nukus', en: 'Nukus' },
        slug: 'nukus', 
        code: 'nukus',
        region: { ru: '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∞—Ä–∞–∫–∞–ª–ø–∞–∫—Å—Ç–∞–Ω', uz: 'Qoraqalpog\'iston Respublikasi', en: 'Republic of Karakalpakstan' },
        coordinates: { latitude: 42.4531, longitude: 59.6103 },
        isActive: true, 
        order: 8 
      }
    ];

    for (const cityData of cities) {
      const existingCity = await City.findOne({ slug: cityData.slug });
      if (!existingCity) {
        const city = new City(cityData);
        await city.save();
        console.log(`‚úÖ –ì–æ—Ä–æ–¥ "${cityData.name}" —Å–æ–∑–¥–∞–Ω.`);
      } else {
        console.log(`‚ö†Ô∏è –ì–æ—Ä–æ–¥ "${cityData.name}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.`);
      }
    }

    // 2. –°–æ–∑–¥–∞–µ–º featured —Ç–æ–≤–∞—Ä—ã
    console.log('\n‚≠ê –°–æ–∑–¥–∞–Ω–∏–µ featured —Ç–æ–≤–∞—Ä–æ–≤...');
    const featuredProducts = [
      {
        name: 'iPhone 15 Pro Max –ß–µ—Ö–æ–ª',
        description: '–ü—Ä–µ–º–∏—É–º —á–µ—Ö–æ–ª –¥–ª—è iPhone 15 Pro Max —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç —É–¥–∞—Ä–æ–≤',
        price: 150000,
        category: '68a00b5e385636dc74409c74', // iPhone
        brand: 'Chexol',
        model: 'iPhone 15 Pro Max',
        material: 'silicone',
        isFeatured: true,
        isNew: true,
        stock: 50
      },
      {
        name: 'Samsung Galaxy S24 Ultra –ó–∞—â–∏—Ç–∞',
        description: '–°—Ç–∏–ª—å–Ω—ã–π —á–µ—Ö–æ–ª –¥–ª—è Samsung Galaxy S24 Ultra',
        price: 120000,
        category: '68a00b5e385636dc74409c76', // Samsung
        brand: 'Chexol',
        model: 'Galaxy S24 Ultra',
        material: 'silicone',
        isFeatured: true,
        isNew: true,
        stock: 30
      },
      {
        name: 'Xiaomi 14 Pro –ß–µ—Ö–æ–ª',
        description: '–ó–∞—â–∏—Ç–Ω—ã–π —á–µ—Ö–æ–ª –¥–ª—è Xiaomi 14 Pro',
        price: 80000,
        category: '68a00b5e385636dc74409c78', // Xiaomi
        brand: 'Chexol',
        model: 'Xiaomi 14 Pro',
        material: 'silicone',
        isFeatured: true,
        isNew: true,
        stock: 25
      },
      {
        name: 'AirPods Pro –ó–∞—â–∏—Ç–Ω—ã–π —á–µ—Ö–æ–ª',
        description: '–°—Ç–∏–ª—å–Ω—ã–π —á–µ—Ö–æ–ª –¥–ª—è AirPods Pro',
        price: 45000,
        category: '68a00b5e385636dc74409c7a', // –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã
        brand: 'Chexol',
        model: 'AirPods Pro',
        material: 'silicone',
        isFeatured: true,
        isNew: true,
        stock: 100
      }
    ];

    for (const productData of featuredProducts) {
      const existingProduct = await Product.findOne({ 
        name: productData.name,
        brand: productData.brand 
      });
      
      if (!existingProduct) {
        const product = new Product({
          ...productData,
          createdBy: '689f3c93ec3814e6acce7c0b' // ID –∞–¥–º–∏–Ω–∞
        });
        await product.save();
        console.log(`‚úÖ Featured —Ç–æ–≤–∞—Ä "${productData.name}" —Å–æ–∑–¥–∞–Ω.`);
      } else {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–æ–≤–∞—Ä –∫–∞–∫ featured
        existingProduct.isFeatured = true;
        existingProduct.isNew = true;
        await existingProduct.save();
        console.log(`‚úÖ –¢–æ–≤–∞—Ä "${productData.name}" –æ–±–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ featured.`);
      }
    }

    // 3. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');
    const Category = require('./models/Category');
    const categories = await Category.find();
    
    for (const category of categories) {
      const productCount = await Product.countDocuments({ 
        category: category._id,
        isActive: true 
      });
      console.log(`‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è "${category.name}": ${productCount} —Ç–æ–≤–∞—Ä–æ–≤`);
    }

    console.log('\nüéâ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('üì± –¢–µ–ø–µ—Ä—å –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ API');
    
    process.exit(0);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error.message);
    process.exit(1);
  }
};

if (require.main === module) {
  createMobileData();
}

module.exports = createMobileData;
