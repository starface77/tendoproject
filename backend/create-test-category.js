const mongoose = require('mongoose');

// –ü—Ä–æ—Å—Ç–∞—è —Å—Ö–µ–º–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
const categorySchema = new mongoose.Schema({
  name: {
    ru: String,
    uz: String,
    en: String
  },
  slug: String,
  description: {
    ru: String,
    uz: String,
    en: String
  },
  icon: String,
  createdBy: mongoose.Schema.Types.ObjectId
});

const Category = mongoose.model('Category', categorySchema);

async function createTestCategory() {
  try {
    console.log('üîÑ –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ MongoDB...');
    await mongoose.connect('mongodb://localhost:27017/chexoluz');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    let category = await Category.findOne({ slug: 'electronics' });

    if (!category) {
      console.log('üìÇ –°–æ–∑–¥–∞—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é...');
      category = new Category({
        name: {
          ru: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
          uz: 'Elektronika',
          en: 'Electronics'
        },
        slug: 'electronics',
        description: {
          ru: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –≥–∞–¥–∂–µ—Ç—ã',
          uz: 'Elektronika va gadjetlar',
          en: 'Electronics and gadgets'
        },
        icon: 'üì±',
        createdBy: null
      });

      await category.save();
      console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞');
    } else {
      console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }

    console.log('üìã ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', category._id);
    console.log('üîó Slug:', category.slug);

    await mongoose.disconnect();
    console.log('‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–æ');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

createTestCategory();




