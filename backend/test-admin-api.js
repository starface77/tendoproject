#!/usr/bin/env node

/**
 * üß™ TEST ADMIN API FUNCTIONALITY
 * –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –±–∞–Ω–Ω–µ—Ä–æ–≤ –∏ —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω API
 */

const axios = require('axios');

const API_BASE = 'https://api.tendo.uz/api/v1';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∞
const ADMIN_CREDENTIALS = {
  email: 'admin@tendo.uz',
  password: 'Admin123!'
};

let adminToken = '';

// –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞
async function loginAdmin() {
  try {
    console.log('üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞...');
    const response = await axios.post(`${API_BASE}/auth/login`, ADMIN_CREDENTIALS);
    
    if (response.data.success && response.data.token) {
      adminToken = response.data.token;
      console.log('‚úÖ –ê–¥–º–∏–Ω –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      return true;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', response.data);
      return false;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error.response?.data || error.message);
    return false;
  }
}

// –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
async function testCreateCategory() {
  try {
    console.log('\nüóÇÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...');
    
    const categoryData = {
      name: {
        ru: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è',
        uz: 'Test kategoriyasi',
        en: 'Test Category'
      },
      description: {
        ru: '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
        uz: 'Test kategoriyasi tavsifi',
        en: 'Test category description'
      },
      isActive: true,
      order: 1
    };

    const response = await axios.post(`${API_BASE}/admin/categories`, categoryData, {
      headers: {
        'Authorization': `Bearer ${adminToken}`,
        'Content-Type': 'application/json'
      }
    });

    if (response.data.success) {
      console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞:', response.data.data._id);
      return response.data.data._id;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', response.data);
      return null;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', error.response?.data || error.message);
    return null;
  }
}

// –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–Ω–Ω–µ—Ä–∞
async function testCreateBanner() {
  try {
    console.log('\nüé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–Ω–Ω–µ—Ä–∞...');
    
    const bannerData = {
      title: '–¢–µ—Å—Ç–æ–≤—ã–π –±–∞–Ω–Ω–µ—Ä',
      subtitle: '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–∞–Ω–Ω–µ—Ä–∞',
      imageUrl: 'https://via.placeholder.com/800x400/3B82F6/FFFFFF?text=Test+Banner',
      targetUrl: '/test-category',
      isActive: true,
      order: 1,
      bgColor: '#3B82F6'
    };

    const response = await axios.post(`${API_BASE}/banners`, bannerData, {
      headers: {
        'Authorization': `Bearer ${adminToken}`,
        'Content-Type': 'application/json'
      }
    });

    if (response.data.success) {
      console.log('‚úÖ –ë–∞–Ω–Ω–µ—Ä —Å–æ–∑–¥–∞–Ω:', response.data.data._id);
      return response.data.data._id;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–Ω–Ω–µ—Ä–∞:', response.data);
      return null;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–Ω–Ω–µ—Ä–∞:', error.response?.data || error.message);
    return null;
  }
}

// –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
async function testCreateProduct(categoryId) {
  try {
    console.log('\nüì¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞...');
    
    const productData = {
      name: {
        ru: '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä',
        uz: 'Test mahsuloti',
        en: 'Test Product'
      },
      description: {
        ru: '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞',
        uz: 'Test mahsuloti tavsifi',
        en: 'Test product description'
      },
      price: 99999,
      originalPrice: 149999,
      category: categoryId,
      brand: 'TestBrand',
      model: 'TestModel',
      material: 'fabric',
      images: [
        'https://via.placeholder.com/400x400/3B82F6/FFFFFF?text=Product+1',
        'https://via.placeholder.com/400x400/10B981/FFFFFF?text=Product+2'
      ],
      isActive: true,
      inStock: true,
      isNew: true,
      featured: true,
      stock: 100
    };

    const response = await axios.post(`${API_BASE}/admin/products`, productData, {
      headers: {
        'Authorization': `Bearer ${adminToken}`,
        'Content-Type': 'application/json'
      }
    });

    if (response.data.success) {
      console.log('‚úÖ –¢–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω:', response.data.data._id);
      return response.data.data._id;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞:', response.data);
      return null;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞:', error.response?.data || error.message);
    return null;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function runTests() {
  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–î–ú–ò–ù API');
  console.log('========================');

  // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
  const loginSuccess = await loginAdmin();
  if (!loginSuccess) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ.');
    return;
  }

  // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const categoryId = await testCreateCategory();
  
  // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–Ω–Ω–µ—Ä–∞
  const bannerId = await testCreateBanner();
  
  // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
  const productId = categoryId ? await testCreateProduct(categoryId) : null;

  // –ò—Ç–æ–≥–∏
  console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
  console.log('============================');
  console.log(`‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: ${loginSuccess ? '–£–°–ü–ï–®–ù–û' : '–û–®–ò–ë–ö–ê'}`);
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${categoryId ? '–£–°–ü–ï–®–ù–û' : '–û–®–ò–ë–ö–ê'}`);
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞: ${bannerId ? '–£–°–ü–ï–®–ù–û' : '–û–®–ò–ë–ö–ê'}`);
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: ${productId ? '–£–°–ü–ï–®–ù–û' : '–û–®–ò–ë–ö–ê'}`);

  if (categoryId && bannerId && productId) {
    console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!');
    console.log('–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
  } else {
    console.log('\n‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò');
    console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ backend –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.');
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if (require.main === module) {
  runTests().catch(console.error);
}

module.exports = { runTests };