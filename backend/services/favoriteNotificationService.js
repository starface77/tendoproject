const Favorite = require('../models/Favorite');
const Notification = require('../models/Notification');
const Product = require('../models/Product');
const User = require('../models/User');

/**
 * üîî –°–ï–†–í–ò–° –£–í–ï–î–û–ú–õ–ï–ù–ò–ô –û–ë –ò–ó–ë–†–ê–ù–ù–û–ú
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–Ω–∏–∂–µ–Ω–∏–∏ —Ü–µ–Ω—ã –∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
 */

class FavoriteNotificationService {
  
  /**
   * üìâ –û–¢–ü–†–ê–í–ö–ê –£–í–ï–î–û–ú–õ–ï–ù–ò–ô –û –°–ù–ò–ñ–ï–ù–ò–ò –¶–ï–ù–´
   */
  static async sendPriceDropNotifications() {
    try {
      console.log('üîî –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–Ω–∏–∂–µ–Ω–∏–∏ —Ü–µ–Ω...');
      
      // –ù–∞–π–¥–µ–º –≤—Å–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
      const favorites = await Favorite.find({
        'notifications.priceDropEnabled': true
      }).populate(['user', 'product']);
      
      let notificationsSent = 0;
      
      for (const favorite of favorites) {
        try {
          // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —Å–Ω–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã
          if (favorite.hasPriceDropped()) {
            // –ü—Ä–æ–≤–µ—Ä–∏–º, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –ª–∏ –º—ã —É–∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —ç—Ç–æ–º
            const existingNotification = await Notification.findOne({
              recipient: favorite.user._id,
              type: 'favorite_price_drop',
              'relatedData.product': favorite.product._id,
              'relatedData.favorite': favorite._id,
              createdAt: { $gte: new Date(Date.now() - 24 * 60 * 60 * 1000) } // –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
            });
            
            if (!existingNotification) {
              // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
              const priceChange = favorite.priceWhenAdded - favorite.product.price;
              const priceChangePercent = ((priceChange / favorite.priceWhenAdded) * 100).toFixed(1);
              
              const notification = new Notification({
                recipient: favorite.user._id,
                type: 'favorite_price_drop',
                title: {
                  ru: '–°–Ω–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä',
                  uz: 'Sevimli mahsulot narxi tushdi',
                  en: 'Price drop on favorite product'
                },
                message: {
                  ru: `–¶–µ–Ω–∞ –Ω–∞ "${favorite.product.name.ru || favorite.product.name}" —Å–Ω–∏–∑–∏–ª–∞—Å—å –Ω–∞ ${priceChangePercent}% (-${priceChange} —Å—É–º)`,
                  uz: `"${favorite.product.name.uz || favorite.product.name}" narxi ${priceChangePercent}% (-${priceChange} so'm) ga tushdi`,
                  en: `Price of "${favorite.product.name.en || favorite.product.name}" dropped by ${priceChangePercent}% (-${priceChange} UZS)`
                },
                relatedData: { 
                  product: favorite.product._id,
                  favorite: favorite._id 
                },
                priority: 'normal',
                channels: ['in_app', 'email'], // TODO: –î–æ–±–∞–≤–∏—Ç—å SMS/Telegram/Push
                metadata: {
                  icon: 'üí∞',
                  color: '#10B981',
                  actionUrl: `/product/${favorite.product._id}`,
                  actionText: {
                    ru: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä',
                    uz: 'Mahsulotni ko\'rish',
                    en: 'View product'
                  }
                }
              });
              
              await notification.save();
              notificationsSent++;
              console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–Ω–∏–∂–µ–Ω–∏–∏ —Ü–µ–Ω—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${favorite.user.email}`);
            }
          }
        } catch (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ ${favorite._id}:`, error);
        }
      }
      
      console.log(`üîî –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–Ω–∏–∂–µ–Ω–∏–∏ —Ü–µ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${notificationsSent}`);
      return notificationsSent;
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–Ω–∏–∂–µ–Ω–∏–∏ —Ü–µ–Ω:', error);
      throw error;
    }
  }
  
  /**
   * üì¶ –û–¢–ü–†–ê–í–ö–ê –£–í–ï–î–û–ú–õ–ï–ù–ò–ô –û –ü–û–°–¢–£–ü–õ–ï–ù–ò–ò –¢–û–í–ê–†–û–í
   */
  static async sendBackInStockNotifications() {
    try {
      console.log('üîî –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤...');
      
      // –ù–∞–π–¥–µ–º –≤—Å–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
      const favorites = await Favorite.find({
        'notifications.backInStockEnabled': true
      }).populate(['user', 'product']);
      
      let notificationsSent = 0;
      
      for (const favorite of favorites) {
        try {
          // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä –≤ –Ω–∞–ª–∏—á–∏–∏ (–µ—Å–ª–∏ –±—ã–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)
          if (favorite.isBackInStock()) {
            // –ü—Ä–æ–≤–µ—Ä–∏–º, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –ª–∏ –º—ã —É–∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —ç—Ç–æ–º
            const existingNotification = await Notification.findOne({
              recipient: favorite.user._id,
              type: 'favorite_back_in_stock',
              'relatedData.product': favorite.product._id,
              'relatedData.favorite': favorite._id,
              createdAt: { $gte: new Date(Date.now() - 24 * 60 * 60 * 1000) } // –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
            });
            
            if (!existingNotification) {
              // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
              const notification = new Notification({
                recipient: favorite.user._id,
                type: 'favorite_back_in_stock',
                title: {
                  ru: '–ò–∑–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä —Å–Ω–æ–≤–∞ –≤ –Ω–∞–ª–∏—á–∏–∏',
                  uz: 'Sevimli mahsulot yana mavjud',
                  en: 'Favorite product back in stock'
                },
                message: {
                  ru: `"${favorite.product.name.ru || favorite.product.name}" —Å–Ω–æ–≤–∞ –≤ –Ω–∞–ª–∏—á–∏–∏!`,
                  uz: `"${favorite.product.name.uz || favorite.product.name}" yana mavjud!`,
                  en: `"${favorite.product.name.en || favorite.product.name}" is back in stock!`
                },
                relatedData: { 
                  product: favorite.product._id,
                  favorite: favorite._id 
                },
                priority: 'normal',
                channels: ['in_app', 'email'], // TODO: –î–æ–±–∞–≤–∏—Ç—å SMS/Telegram/Push
                metadata: {
                  icon: 'üì¶',
                  color: '#3B82F6',
                  actionUrl: `/product/${favorite.product._id}`,
                  actionText: {
                    ru: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä',
                    uz: 'Mahsulotni ko\'rish',
                    en: 'View product'
                  }
                }
              });
              
              await notification.save();
              notificationsSent++;
              console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${favorite.user.email}`);
            }
          }
        } catch (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ ${favorite._id}:`, error);
        }
      }
      
      console.log(`üîî –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${notificationsSent}`);
      return notificationsSent;
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
      throw error;
    }
  }
  
  /**
   * üîÑ –ü–†–û–í–ï–†–ö–ê –ò –û–¢–ü–†–ê–í–ö–ê –í–°–ï–• –£–í–ï–î–û–ú–õ–ï–ù–ò–ô
   */
  static async checkAndSendAllNotifications() {
    try {
      console.log('üîî –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞—Ö...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–Ω–∏–∂–µ–Ω–∏–∏ —Ü–µ–Ω
      const priceDropCount = await this.sendPriceDropNotifications();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
      const backInStockCount = await this.sendBackInStockNotifications();
      
      console.log(`üîî –í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã. –°–Ω–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω: ${priceDropCount}, –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ: ${backInStockCount}`);
      
      return {
        priceDropCount,
        backInStockCount
      };
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
      throw error;
    }
  }
}

module.exports = FavoriteNotificationService;