const express = require('express');
const { body } = require('express-validator');
const {
  register,
  login,
  adminLogin,
  logout,
  getMe,
  forgotPassword,
  resetPassword,
  updateDetails,
  updatePassword,
  verifyEmail,
  resendVerificationEmail
} = require('../controllers/auth');

const { protect } = require('../middleware/auth');

const router = express.Router();

// üìã –î–û–°–¢–£–ü–ù–´–ï –ú–ê–†–®–†–£–¢–´
router.get('/', (req, res) => {
  res.json({
    success: true,
    message: 'Auth routes available',
    routes: [
      'POST /register',
      'POST /login',
      'POST /admin/login',
      'GET /logout',
      'GET /me',
      'POST /forgot-password',
      'PUT /reset-password/:token',
      'PUT /update-details',
      'PUT /update-password',
      'GET /verify-email/:token',
      'POST /resend-verification'
    ]
  });
});

// üìù –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø
router.post('/register', [
  body('email').isEmail().withMessage('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email'),
  body('password').isLength({ min: 6 }).withMessage('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤'),
  body('firstName').notEmpty().withMessage('–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'),
  body('lastName').notEmpty().withMessage('–§–∞–º–∏–ª–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞'),
  body('phone').matches(/^\+998[0-9]{9}$/).withMessage('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
], register);

// üîê –í–•–û–î
router.post('/login', [
  body('email').isEmail().withMessage('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email'),
  body('password').notEmpty().withMessage('–ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω')
], login);

// üëë –í–•–û–î –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê
router.post('/admin/login', [
  body('email').isEmail().withMessage('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email'),
  body('password').notEmpty().withMessage('–ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω')
], adminLogin);

// üö™ –í–´–•–û–î
router.get('/logout', logout);

// üë§ –ü–û–õ–£–ß–ï–ù–ò–ï –ü–†–û–§–ò–õ–Ø
router.get('/me', protect, getMe);

// üìß –ó–ê–ë–´–õ –ü–ê–†–û–õ–¨
router.post('/forgot-password', [
  body('email').isEmail().withMessage('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email')
], forgotPassword);

// üîÑ –°–ë–†–û–° –ü–ê–†–û–õ–Ø
router.put('/reset-password/:resettoken', [
  body('password').isLength({ min: 6 }).withMessage('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤')
], resetPassword);

// ‚úèÔ∏è –û–ë–ù–û–í–õ–ï–ù–ò–ï –ü–†–û–§–ò–õ–Ø
router.put('/update-details', protect, [
  body('firstName').optional().notEmpty().withMessage('–ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º'),
  body('lastName').optional().notEmpty().withMessage('–§–∞–º–∏–ª–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π'),
  body('phone').optional().matches(/^\+998[0-9]{9}$/).withMessage('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
], updateDetails);

// üîí –°–ú–ï–ù–ê –ü–ê–†–û–õ–Ø
router.put('/update-password', protect, [
  body('currentPassword').notEmpty().withMessage('–¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'),
  body('newPassword').isLength({ min: 6 }).withMessage('–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤')
], updatePassword);

// ‚úÖ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï EMAIL
router.get('/verify-email/:token', verifyEmail);

// üìß –ü–û–í–¢–û–†–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–Ø
router.post('/resend-verification', protect, resendVerificationEmail);

module.exports = router;
