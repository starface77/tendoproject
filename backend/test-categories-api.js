const mongoose = require('mongoose');
const Category = require('./models/Category');

async function testCategoriesAPI() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π...\n');

    await mongoose.connect('mongodb://localhost:27017/tendo');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const allCategories = await Category.find({});
    console.log(`üìä –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –ë–î: ${allCategories.length}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const activeCategories = await Category.find({ isActive: true });
    console.log(`‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${activeCategories.length}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å –∫–∞–∫ –≤ API
    const apiQuery = { isActive: true };
    const apiCategories = await Category.find(apiQuery)
      .populate('parent', 'name slug')
      .sort({ order: 1, 'name.ru': 1 })
      .select('-createdBy -updatedBy -__v');

    console.log(`üåê API –∑–∞–ø—Ä–æ—Å –≤–µ—Ä–Ω–µ—Ç: ${apiCategories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π`);

    console.log('\nüìã –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ API:');
    apiCategories.forEach((cat, i) => {
      console.log(`${i+1}. ${cat.name?.ru || '–ë–µ–∑ –∏–º–µ–Ω–∏'} (ID: ${cat._id}, Slug: ${cat.slug})`);
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–µ—Ç–∞–ª—å–Ω–æ
    console.log('\nüîé –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö:');
    for (const cat of apiCategories) {
      console.log(`\n--- –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${cat.name?.ru} ---`);
      console.log(`ID: ${cat._id}`);
      console.log(`Slug: ${cat.slug}`);
      console.log(`Active: ${cat.isActive}`);
      console.log(`Visible: ${cat.isVisible}`);
      console.log(`Level: ${cat.level}`);
      console.log(`Path: ${cat.path}`);
      console.log(`Order: ${cat.sortOrder}`);
    }

    await mongoose.disconnect();
    console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    console.error(error.stack);
  }
}

testCategoriesAPI();




