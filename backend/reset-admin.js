const { connectDB } = require('./config/database');
const User = require('./models/User');
const bcrypt = require('bcryptjs');

const resetAdmin = async () => {
  try {
    console.log('üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    await connectDB();

    console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∞–¥–º–∏–Ω–æ–≤...');

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤
    const deleteResult = await User.deleteMany({ role: 'admin' });
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${deleteResult.deletedCount} –∞–¥–º–∏–Ω–æ–≤`);

    console.log('üëë –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞...');

    const email = 'admin@tendo.uz';
    const password = 'admin123456';

    // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
    const saltRounds = 12;
    const hashedPassword = await bcrypt.hash(password, saltRounds);

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
    const newAdmin = new User({
      email,
      password: hashedPassword,
      firstName: 'Admin',
      lastName: 'Tendo',
      phone: '+998901234568',
      role: 'admin',
      isActive: true,
      isEmailVerified: true,
      permissions: [
        'read:products',
        'write:products',
        'read:orders',
        'write:orders',
        'read:users',
        'write:users',
        'read:analytics',
        'manage:site'
      ]
    });

    await newAdmin.save();

    console.log('‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üìß Email: ${email}`);
    console.log(`üîë –ü–∞—Ä–æ–ª—å: ${password}`);
    console.log(`üÜî ID: ${newAdmin._id}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞—Ä–æ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å...');
    const isPasswordValid = await newAdmin.checkPassword(password);
    console.log(`–ü–∞—Ä–æ–ª—å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: ${isPasswordValid}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    process.exit(0);
  }
};

resetAdmin();
