#!/bin/bash

echo "üîß –§–ò–ö–° –ü–†–û–ë–õ–ï–ú–´ –° JWT –°–ï–°–°–ò–ï–ô –ù–ê VPS"
echo "========================================"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd /var/www/tendo/backend

echo "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
if [ -f ".env" ]; then
    echo "üìÑ –ù–∞–π–¥–µ–Ω .env —Ñ–∞–π–ª"
    grep -E "JWT_SECRET|MONGO_URI" .env || echo "‚ö†Ô∏è  JWT_SECRET –∏–ª–∏ MONGO_URI –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env"
else
    echo "‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º..."
    cat > .env << 'EOF'
# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
MONGO_URI=mongodb://localhost:27017/tendomarketuz

# JWT —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á
JWT_SECRET=tendo_market_production_jwt_secret_key_2024_super_secure_change_this

# –î—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
NODE_ENV=production
PORT=5000

# Email –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è)
EMAIL_USER=your-email@example.com
EMAIL_PASS=your-email-password

# SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
HTTPS_ENABLED=true
SSL_CERT_PATH=/etc/letsencrypt/live/tendo.uz/fullchain.pem
SSL_KEY_PATH=/etc/letsencrypt/live/tendo.uz/privkey.pem
EOF
    echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
fi

echo "2Ô∏è‚É£ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
export JWT_SECRET="tendo_market_production_jwt_secret_key_2024_super_secure_change_this"
export MONGO_URI="mongodb://localhost:27017/tendomarketuz"
export NODE_ENV="production"
export PORT="5000"

echo "3Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º MongoDB..."
sudo systemctl stop mongodb
sudo systemctl start mongodb
sleep 3

echo "4Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏..."
node -e "
const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
const jwt = require('jsonwebtoken');

async function setupAdmin() {
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
    await mongoose.connect('mongodb://localhost:27017/tendomarketuz');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–µ—Å–ª–∏ –µ—Å—Ç—å)
    await mongoose.connection.db.dropCollection('users').catch(() => {});

    // –°–æ–∑–¥–∞–µ–º —Å—Ö–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userSchema = new mongoose.Schema({
      firstName: String,
      lastName: String,
      email: String,
      password: String,
      phone: String,
      role: String,
      isActive: Boolean,
      isEmailVerified: Boolean,
      createdAt: Date,
      updatedAt: Date
    });

    const User = mongoose.model('User', userSchema);

    // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
    const hashedPassword = await bcrypt.hash('admin123456', 12);

    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
    const admin = new User({
      firstName: 'Admin',
      lastName: 'Tendo',
      email: 'admin@tendo.uz',
      password: hashedPassword,
      phone: '+998901234567',
      role: 'super_admin',
      isActive: true,
      isEmailVerified: true,
      createdAt: new Date(),
      updatedAt: new Date()
    });

    await admin.save();
    console.log('‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω: admin@tendo.uz');

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω
    const JWT_SECRET = 'tendo_market_production_jwt_secret_key_2024_super_secure_change_this';
    const token = jwt.sign(
      {
        id: admin._id,
        email: admin.email,
        role: admin.role
      },
      JWT_SECRET,
      { expiresIn: '7d' }
    );

    console.log('\\nüîë –¢–ï–°–¢–û–í–´–ô –¢–û–ö–ï–ù:');
    console.log(token);

    console.log('\\nüìä –î–ê–ù–ù–´–ï –î–õ–Ø –õ–û–ì–ò–ù–ê:');
    console.log('Email: admin@tendo.uz');
    console.log('Password: admin123456');

    await mongoose.disconnect();
    console.log('‚úÖ –ì–æ—Ç–æ–≤–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  }
}

setupAdmin();
"

echo "5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É API..."
sleep 2

# –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoint
curl -s http://localhost:5000/health | head -5

echo "6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é..."
sleep 1

# –¢–µ—Å—Ç –ª–æ–≥–∏–Ω
LOGIN_RESPONSE=$(curl -s -X POST http://localhost:5000/api/v1/auth/login \
  -H "Content-Type: application/json" \
  -d '{"email":"admin@tendo.uz","password":"admin123456"}')

echo "üìù –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
echo "$LOGIN_RESPONSE" | jq . 2>/dev/null || echo "$LOGIN_RESPONSE"

# –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–∫–µ–Ω
TOKEN=$(echo "$LOGIN_RESPONSE" | jq -r '.data.token' 2>/dev/null || echo "$LOGIN_RESPONSE" | grep -o '"token":"[^"]*"' | cut -d'"' -f4)

if [ -n "$TOKEN" ] && [ "$TOKEN" != "null" ]; then
    echo "üîë –ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω, —Ç–µ—Å—Ç–∏—Ä—É–µ–º /auth/me..."

    # –¢–µ—Å—Ç /auth/me —Å —Ç–æ–∫–µ–Ω–æ–º
    ME_RESPONSE=$(curl -s -X GET http://localhost:5000/api/v1/auth/me \
      -H "Authorization: Bearer $TOKEN")

    echo "üìù –û—Ç–≤–µ—Ç /auth/me:"
    echo "$ME_RESPONSE" | jq . 2>/dev/null || echo "$ME_RESPONSE"
else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω"
fi

echo "7Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º backend —á–µ—Ä–µ–∑ PM2..."
pm2 stop tendo-backend 2>/dev/null
pm2 delete tendo-backend 2>/dev/null

pm2 start ecosystem.config.js --env production
sleep 3

pm2 status

echo ""
echo "üéâ –ì–û–¢–û–í–û!"
echo ""
echo "üåê –î–û–°–¢–£–ü –ö –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò:"
echo "URL: https://admin.tendo.uz"
echo "Email: admin@tendo.uz"
echo "Password: admin123456"
echo ""
echo "üìã –ï–°–õ–ò –ü–†–û–ë–õ–ï–ú–ê –û–°–¢–ê–ï–¢–°–Ø:"
echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: pm2 logs tendo-backend"
echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ MongoDB: sudo systemctl status mongodb"
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Nginx: sudo systemctl status nginx"




